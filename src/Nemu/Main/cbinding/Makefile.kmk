# $Id: Makefile.kmk $
## @file
# Sub-Makefile for the Nemu C Binding.
#

#
# Copyright (C) 2009-2015 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

SUB_DEPTH = ../../../..
include $(KBUILD_PATH)/subheader.kmk


#
# The samples
#
INSTALLS += CAPISamples
CAPISamples_MODE = a+r,u+rw
CAPISamples_INST = \
	$(INST_SDK)bindings/c/samples/
CAPISamples_SOURCES = \
	tstCAPIGlue.c \
	makefile.tstCAPIGlue=>Makefile

INSTALLS += CAPIGlue
CAPIGlue_MODE = a+r,u+rw
CAPIGlue_INST = \
	$(INST_SDK)bindings/c/glue/
CAPIGlue_SOURCES = \
	NemuCAPIGlue.c \
	$(CAPIHeaders_0_OUTDIR)/NemuCAPIGlue.h

INSTALLS += CAPIHeaders
CAPIHeaders_MODE = a+r,u+rw
CAPIHeaders_INST = $(INST_SDK)bindings/c/include/
CAPIHeaders_SOURCES = \
	NemuCAPI_v2_2.h \
	NemuCAPI_v3_0.h \
	NemuCAPI_v3_1.h \
	NemuCAPI_v3_2.h \
	NemuCAPI_v4_0.h \
	NemuCAPI_v4_1.h \
	NemuCAPI_v4_2.h \
	NemuCAPI_v4_3.h \
	$(CAPIHeaders_0_OUTDIR)/NemuCAPI.h=>NemuCAPI_v$(NEMU_API_VERSION).h

$$(CAPIHeaders_0_OUTDIR)/NemuCAPIGlue.h: \
		$(PATH_SUB_CURRENT)/NemuCAPIGlue.h.in \
		$(MAKEFILE_CURRENT) \
		| $$(dir $$@)
	$(call MSG_GENERATE,,$@)
	$(QUIET)$(SED) \
		-e 's/@NEMU_API_VERSION@/$(NEMU_API_VERSION)/' \
		<  $< >  $@

$$(CAPIHeaders_0_OUTDIR)/NemuCAPI.h: \
		$(PATH_SUB_CURRENT)/capiidl.xsl \
		$(PATH_SUB_CURRENT)/../idl/typemap-shared.inc.xsl \
		$(NEMU_XIDL_FILE) \
		| $$(dir $$@)
	$(call MSG_TOOL,xsltproc,CAPIHeaders,$<,$@)
	$(QUIET)$(NEMU_XSLTPROC) -o $@ $^

if !defined(NEMU_ONLY_SDK)

 #
 # The C API binding utility DLL
 #
 DLLS += NemuCAPI
 NemuCAPI_TEMPLATE = NEMUMAINCLIENTDLL
 ifdef NEMU_WITH_XPCOM
  # Keep old name on XPCOM so that legacy code is happy.
  NemuCAPI_INST = $(INST_BIN)NemuXPCOMC$(NEMU_SUFF_DLL)
 endif
 NemuCAPI_DEFS = IN_NEMUCAPI
 NemuCAPI_SOURCES = \
 	NemuCAPI.cpp
 NemuCAPI_SOURCES.win = \
	NemuCAPI.rc
 NemuCAPI_INCS = \
 	$(CAPIHeaders_0_OUTDIR)
 NemuCAPI_INTERMEDIATES = \
 	$(CAPIHeaders_0_OUTDIR)/NemuCAPI.h

 #
 # The C glue library.
 #
 LIBRARIES += NemuCAPIGlue
 NemuCAPIGlue_TEMPLATE = NEMUMAINEXE
 NemuCAPIGlue_DEFS = IN_NEMUCAPI
 NemuCAPIGlue_SOURCES = \
 	NemuCAPIGlue.c
 ifdef NEMU_WITH_XPCOM
  NemuCAPIGlue_SOURCES += \
 	$(NEMU_PATH_SDK)/bindings/xpcom/lib/VirtualBox_i.c
 else
  NemuCAPIGlue_SOURCES += \
 	$(NEMU_PATH_SDK)/bindings/mscom/lib/VirtualBox_i.c
 endif
 NemuCAPIGlue_INCS = \
 	$(NEMU_PATH_SDK)/bindings/c/include \
 	$(NEMU_PATH_SDK)/bindings/c/glue
 NemuCAPIGlue_INTERMEDIATES = \
 	$(NEMU_PATH_SDK)/bindings/c/glue/NemuCAPIGlue.h \
 	$(NEMU_PATH_SDK)/bindings/c/include/NemuCAPI_v$(NEMU_API_VERSION).h

 if defined(NEMU_WITH_TESTCASES) && "$(KBUILD_TARGET)" != "darwin"
  #
  # The testcase (also in samples).
  # C testcase using the dynamic glue.
  #
  PROGRAMS += tstCAPIGlue
  tstCAPIGlue_TEMPLATE = NEMUR3TSTEXE
  tstCAPIGlue_INCS = \
  	$(NEMU_PATH_SDK)/bindings/c/include \
  	$(NEMU_PATH_SDK)/bindings/c/glue
  ifdef NEMU_WITH_XPCOM
   tstCAPIGlue_INCS += \
   	$(NEMU_PATH_SDK)/bindings/xpcom/include
  else
   tstCAPIGlue_INCS += \
   	$(NEMU_PATH_SDK)/bindings/mscom/include
  endif
  tstCAPIGlue_INTERMEDIATES = \
  	$(NEMU_PATH_SDK)/bindings/c/glue/NemuCAPIGlue.h \
  	$(NEMU_PATH_SDK)/bindings/c/include/NemuCAPI_v$(NEMU_API_VERSION).h \
       $(if-expr !defined(NEMU_WITH_XPCOM),$(NEMU_PATH_SDK)/bindings/mscom/include/VirtualBox.h,)
  tstCAPIGlue_SOURCES = \
  	tstCAPIGlue.c
  tstCAPIGlue_LIBS = \
  	$(NemuCAPIGlue_1_TARGET)
 endif

endif # ! NEMU_ONLY_SDK

# generate rules.
include $(FILE_KBUILD_SUB_FOOTER)

