# $Id: Makefile.kmk $
## @file
# Sub-Makefile for the Bus Mouse Extension Pack Sample.
#

#
# Copyright (C) 2010-2015 Oracle Corporation
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#

SUB_DEPTH = ../../../..
include $(KBUILD_PATH)/subheader.kmk

#
# Extend the extension pack templates.
#
TEMPLATE_NemuR3ExtPackBusMouse          = For the ring-3 context modules in the Bus Mouse extension pack.
TEMPLATE_NemuR3ExtPackBusMouse_EXTENDS  = NemuR3ExtPack
TEMPLATE_NemuR3ExtPackBusMouse_INST     = $(INST_EXTPACK)BusMouse/$(KBUILD_TARGET).$(KBUILD_TARGET_ARCH)/

TEMPLATE_NemuR0ExtPackBusMouse          = For the ring-0 context modules in the Bus Mouse extension pack.
TEMPLATE_NemuR0ExtPackBusMouse_EXTENDS  = NemuR0ExtPack
TEMPLATE_NemuR0ExtPackBusMouse_INST     = $(INST_EXTPACK)BusMouse/$(KBUILD_TARGET).$(KBUILD_TARGET_ARCH)/

TEMPLATE_NemuRcExtPackBusMouse          = For the raw-mode context modules in the Bus Mouse extension pack.
TEMPLATE_NemuRcExtPackBusMouse_EXTENDS  = NemuRcExtPack
TEMPLATE_NemuRcExtPackBusMouse_INST     = $(INST_EXTPACK)BusMouse/$(KBUILD_TARGET).$(KBUILD_TARGET_ARCH)/

TEMPLATE_NemuInsExtPackBusMouse         = For the install targets of an extension pack.
TEMPLATE_NemuInsExtPackBusMouse_EXTENDS = NemuR0ExtPack
TEMPLATE_NemuInsExtPackBusMouse_INST    = $(INST_EXTPACK)BusMouse/

#
# Globals.
#
NEMU_BUSMOUSE_NAME         = BusMouse
NEMU_BUSMOUSE_MANGLED_NAME = BusMouse
NEMU_PATH_EXTPACK_BUSMOUSE = $(PATH_STAGE)/$(INST_EXTPACK)BusMouse


#
# NemuBusMouseMain - The module which the VirtualBox Main API talks to.
#
DLLS += NemuBusMouseMain
NemuBusMouseMain_TEMPLATE = NemuR3ExtPackBusMouse
NemuBusMouseMain_SOURCES = NemuBusMouseMain.cpp
NemuBusMouseMain_DEFS =


#
# The device code.
#
DLLS += NemuBusMouseR3
NemuBusMouseR3_TEMPLATE = NemuR3ExtPackBusMouse
NemuBusMouseR3_SOURCES  = BusMouse.cpp

SYSMODS += NemuBusMouseR0
NemuBusMouseR0_TEMPLATE = NemuR0ExtPackBusMouse
NemuBusMouseR0_SOURCES  = BusMouse.cpp

ifdef NEMU_WITH_RAW_MODE
 SYSMODS += NemuBusMouseRC
 NemuBusMouseRC_TEMPLATE = NemuRcExtPackBusMouse
 NemuBusMouseRC_SOURCES  = BusMouse.cpp
endif


#
# Install the description.
#
INSTALLS += NemuBusMouseIns
NemuBusMouseIns_TEMPLATE = NemuInsExtPackBusMouse
NemuBusMouseIns_SOURCES = \
	$(NemuBusMouseIns_0_OUTDIR)/ExtPack.xml
$(call NEMU_EDIT_VERSION_RULE_FN,NemuBusMouseIns,ExtPack.xml)


#
# Packing.
#
ifndef NEMU_WITHOUT_EXTPACK_BUSMOUSE_PACKING
 PACKING += $(NEMU_PATH_PACKAGES)/$(NEMU_BUSMOUSE_MANGLED_NAME)-$(NEMU_VERSION_STRING)r$(NEMU_SVN_REV).nemu-extpack
endif

ifndef NEMU_WITH_EXTPACK_OS_ARCHS
 ifeq ($(USER),bird) # for now
  NEMU_WITH_EXTPACK_OS_ARCHS = $(KBUILD_TARGET).$(KBUILD_TARGET_ARCH)
 endif
endif

# Build the file list.  The macro takes 1=darwin.x86, 2=dist/VirtualBox.app/Contents/MacOS, 3=dylib
NEMU_BUSMOUSE_FILES_MACRO = \
	$(PATH_OUT_BASE)/$(1)/$(KBUILD_TYPE)/$(2)/ExtensionPacks/$(NEMU_BUSMOUSE_MANGLED_NAME)/$(1)/NemuBusMouseMain.$(3)=>$(1)/NemuBusMouseMain.$(3) \
	$(PATH_OUT_BASE)/$(1)/$(KBUILD_TYPE)/$(2)/ExtensionPacks/$(NEMU_BUSMOUSE_MANGLED_NAME)/$(1)/NemuBusMouseR3.$(3)=>$(1)/NemuBusMouseR3.$(3) \
	$(PATH_OUT_BASE)/$(1)/$(KBUILD_TYPE)/$(2)/ExtensionPacks/$(NEMU_BUSMOUSE_MANGLED_NAME)/$(1)/NemuBusMouseR0.r0=>$(1)/NemuBusMouseR0.r0
ifdef NEMU_WITH_RAW_MODE
 NEMU_BUSMOUSE_FILES_MACRO += \
 	$(PATH_OUT_BASE)/$(1)/$(KBUILD_TYPE)/$(2)/ExtensionPacks/$(NEMU_BUSMOUSE_MANGLED_NAME)/$(1)/NemuBusMouseRC.rc=>$(1)/NemuBusMouseRC.rc
endif

NEMU_BUSMOUSE_FILES := \
	$(NEMU_PATH_EXTPACK_BUSMOUSE)/ExtPack.xml=>ExtPack.xml

if1of (darwin.amd64, $(NEMU_WITH_EXTPACK_OS_ARCHS))
 NEMU_BUSMOUSE_FILES += $(call NEMU_BUSMOUSE_FILES_MACRO,darwin.amd64,dist/VirtualBox.app/Contents/MacOS,dylib)
endif
if1of (darwin.x86, $(NEMU_WITH_EXTPACK_OS_ARCHS))
 NEMU_BUSMOUSE_FILES += $(call NEMU_BUSMOUSE_FILES_MACRO,darwin.x86,dist/VirtualBox.app/Contents/MacOS,dylib)
endif
if1of (freebsd.amd64, $(NEMU_WITH_EXTPACK_OS_ARCHS))
 NEMU_BUSMOUSE_FILES += $(call NEMU_BUSMOUSE_FILES_MACRO,freebsd.amd64,bin,so)
endif
if1of (freebsd.x86, $(NEMU_WITH_EXTPACK_OS_ARCHS))
 NEMU_BUSMOUSE_FILES += $(call NEMU_BUSMOUSE_FILES_MACRO,freebsd.x86,bin,so)
endif
if1of (linux.amd64, $(NEMU_WITH_EXTPACK_OS_ARCHS))
 NEMU_BUSMOUSE_FILES += $(call NEMU_BUSMOUSE_FILES_MACRO,linux.amd64,bin,so)
endif
if1of (linux.x86, $(NEMU_WITH_EXTPACK_OS_ARCHS))
 NEMU_BUSMOUSE_FILES += $(call NEMU_BUSMOUSE_FILES_MACRO,linux.x86,bin,so)
endif
if1of (os2.x86, $(NEMU_WITH_EXTPACK_OS_ARCHS))
 NEMU_BUSMOUSE_FILES += $(call NEMU_BUSMOUSE_FILES_MACRO,os2.x86,bin,so)
endif
if1of (solaris.amd64, $(NEMU_WITH_EXTPACK_OS_ARCHS))
 NEMU_BUSMOUSE_FILES += $(call NEMU_BUSMOUSE_FILES_MACRO,solaris.amd64,bin,so)
endif
if1of (solaris.x86, $(NEMU_WITH_EXTPACK_OS_ARCHS))
 NEMU_BUSMOUSE_FILES += $(call NEMU_BUSMOUSE_FILES_MACRO,solaris.x86,bin,so)
endif
if1of (win.amd64, $(NEMU_WITH_EXTPACK_OS_ARCHS))
 NEMU_BUSMOUSE_FILES += $(call NEMU_BUSMOUSE_FILES_MACRO,win.amd64,bin,dll)
endif
if1of (win.x86, $(NEMU_WITH_EXTPACK_OS_ARCHS))
 NEMU_BUSMOUSE_FILES += $(call NEMU_BUSMOUSE_FILES_MACRO,win.x86,bin,dll)
endif

# Pack it all up using a temporary staging directory.
$(NEMU_PATH_PACKAGES)/$(NEMU_BUSMOUSE_MANGLED_NAME)-$(NEMU_VERSION_STRING)r$(NEMU_SVN_REV).nemu-extpack: \
		$$(foreach file, $$(NEMU_BUSMOUSE_FILES), $$(firstword $$(subst =>,$$(SP),$$(file)))) \
		| $(NEMU_PATH_PACKAGES)/
	$(RM) -f $(wildcard $(NEMU_PATH_PACKAGES)/$(NEMU_BUSMOUSE_MANGLED_NAME)-*.nemu-extpack) \
		$(NemuBusMouseIns_0_OUTDIR)/ExtPack.manifest \
		$(NemuBusMouseIns_0_OUTDIR)/ExtPack.signature
# Stage all the files
	$(RM) -Rf $(NemuBusMouseIns_0_OUTDIR)/Stage/
	$(foreach file, $(NEMU_BUSMOUSE_FILES),\
		$(NLTAB)$(MKDIR) -p $(dir $(lastword $(subst =>,$(SP)$(NemuBusMouseIns_0_OUTDIR)/Stage/,$(file)))) \
		$(NLTAB)$(CP) $(subst =>,$(SP)$(NemuBusMouseIns_0_OUTDIR)/Stage/,$(file)) )
# Create the manifest
	$(NEMU_RTMANIFEST) \
		--manifest $(NemuBusMouseIns_0_OUTDIR)/Stage/ExtPack.manifest \
		--chdir $(NemuBusMouseIns_0_OUTDIR)/Stage/ \
		$(foreach file, $(NEMU_BUSMOUSE_FILES), $(lastword $(subst =>,$(SP),$(file))))
	$(APPEND) $(NemuBusMouseIns_0_OUTDIR)/Stage/ExtPack.signature "todo"
	$(CHMOD) a+r \
		$(NemuBusMouseIns_0_OUTDIR)/Stage/ExtPack.manifest \
		$(NemuBusMouseIns_0_OUTDIR)/Stage/ExtPack.signature
# Tar it up.
	tar -cvf - -C $(NemuBusMouseIns_0_OUTDIR)/Stage/ . | gzip -9c > $@
# Clean up
	$(RM) -Rf $(NemuBusMouseIns_0_OUTDIR)/Stage/

BLDDIRS += $(NEMU_PATH_PACKAGES)/

include $(FILE_KBUILD_SUB_FOOTER)

