# $Id: Makefile.kmk $
## @file
# Sub-Makefile for Python bindings
#

#
# Copyright (C) 2009-2015 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

SUB_DEPTH = ../../../..
include $(KBUILD_PATH)/subheader.kmk

ifdef NEMU_WITH_MULTIVERSION_PYTHON
 NEMU_MULTIPYTHON = 1
else
 NEMU_MULTIPYTHON = 0
endif

#
# List of supported Python versions, defining a number of
# NEMU_PYTHON[25|26|27|DEF]_[INC|LIB] variables which get picked up below.
#
ifeq ($(KBUILD_TARGET),darwin) # Relatively predictable, don't script.
 ifeq ($(KBUILD_TARGET_ARCH),x86)
  NEMU_PYTHON25_INC = $(NEMU_PATH_MACOSX_SDK)/usr/include/python2.5
  NEMU_PYTHON25_LIB = $(NEMU_PATH_MACOSX_SDK)/usr/lib/libpython2.5.dylib
  NEMU_PYTHON25_LIB_X86 = $(NEMU_PYTHON25_LIB)
 endif
 if  !defined(NEMU_WITHOUT_NEMUPYTHON_FOR_OSX_10_6) \
  && (   !defined(NEMU_OSE) \
      || "$(wildcard $(NEMU_PATH_MACOSX_SDK_10_6)/usr/lib/libpython2.6.dylib)" != "")
  NEMU_PYTHON26_INC = $(NEMU_PATH_MACOSX_SDK_10_6)/usr/include/python2.6
  NEMU_PYTHON26_LIB = $(NEMU_PATH_MACOSX_SDK_10_6)/usr/lib/libpython2.6.dylib
  NEMU_PYTHON26_LIB_X86 = $(NEMU_PYTHON26_LIB)
 endif
 if  !defined(NEMU_WITHOUT_NEMUPYTHON_FOR_OSX_10_7) \
  && (   defined(NEMU_NOT_OSE_LATER_SOMETIME) \
      || "$(wildcard $(NEMU_PATH_MACOSX_SDK_10_7)/usr/lib/libpython2.7.dylib)" != "")
  NEMU_PYTHON27_INC = $(NEMU_PATH_MACOSX_SDK_10_7)/usr/include/python2.7
  NEMU_PYTHON27_LIB = $(NEMU_PATH_MACOSX_SDK_10_7)/usr/lib/libpython2.7.dylib
  NEMU_PYTHON27_LIB_X86 = $(NEMU_PYTHON27_LIB)
 endif

else
 # Use the script.
 $(eval $(subst |,$(NL),$(shell $(NEMU_BLD_PYTHON) \
	$(PATH_SUB_CURRENT)/gen_python_deps.py \
	    $(KBUILD_TARGET) \
	    $(KBUILD_TARGET_ARCH) \
	    $(NEMU_MULTIPYTHON) )))
endif

ifndef NEMU_ONLY_SDK

#
# Base Python Client Module - the C++/XPCOM bits (not actually built).
#
NemuPythonBase_TEMPLATE = XPCOM
NemuPythonBase_CXXFLAGS = -Wno-write-strings
NemuPythonBase_DLLSUFF.darwin = .so
NemuPythonBase_DEFS     = \
	_IMPL_NS_COM \
	_IMPL_NS_BASE \
	EXPORT_XPTI_API \
        EXPORT_XPT_API \
	NEMU_PYXPCOM \
	NEMU_WITH_XPCOM \
	NEMU_PYXPCOM_VERSIONED
#NemuPythonBase_DEFS.debug = \
#	NEMU_DEBUG_LIFETIMES
NemuPythonBase_INCS     = \
	src
NemuPythonBase_SOURCES  = \
	src/module/_xpcom.cpp \
	src/dllmain.cpp \
	src/ErrorUtils.cpp \
	src/PyGBase.cpp \
	src/PyGInputStream.cpp \
	src/PyGModule.cpp \
	src/PyGStub.cpp \
	src/PyGWeakReference.cpp \
	src/PyIClassInfo.cpp \
	src/PyIComponentManager.cpp \
	src/PyIComponentManagerObsolete.cpp \
	src/PyIEnumerator.cpp \
	src/PyIID.cpp \
	src/PyIInputStream.cpp \
	src/PyIInterfaceInfo.cpp \
	src/PyIInterfaceInfoManager.cpp \
	src/PyISimpleEnumerator.cpp \
	src/PyISupports.cpp \
	src/PyIVariant.cpp \
	src/Pyxpt_info.cpp \
	src/TypeObject.cpp \
	src/VariantUtils.cpp
NemuPythonBase_LIBS     = \
	$(PATH_STAGE_LIB)/NemuCOM$(NEMU_SUFF_LIB) \
	$(PATH_STAGE_BIN)/NemuXPCOM$(NEMU_SUFF_DLL)

# 32-bit base.
NemuPythonBase_x86_TEMPLATE = XPCOM-x86
NemuPythonBase_x86_EXTENDS  = NemuPythonBase
NemuPythonBase_x86_DEFS     = MODULE_NAME_SUFFIX=_x86 $(NemuPythonBase_DEFS)
NemuPythonBase_x86_LIBS     = \
	$(PATH_STAGE_LIB)/NemuCOM-x86$(NEMU_SUFF_LIB) \
	$(PATH_STAGE_BIN)/NemuXPCOM-x86$(NEMU_SUFF_DLL)


ifdef NEMU_PYTHON23_INC
#
# Python 2.3 version
#
DLLS += NemuPython2_3
NemuPython2_3_EXTENDS    = NemuPythonBase
NemuPython2_3_EXTENDS_BY = appending
NemuPython2_3_TEMPLATE   = XPCOM$(if-expr "$(KBUILD_TARGET)" == "darwin",OSX104,)
NemuPython2_3_INCS       = $(NEMU_PYTHON23_INC)
NemuPython2_3_LIBS       = $(NEMU_PYTHON23_LIB)

 ifdef NEMU_WITH_32_ON_64_MAIN_API
DLLS += NemuPython2_3_x86
NemuPython2_3_x86_EXTENDS    = NemuPythonBase_x86
NemuPython2_3_x86_EXTENDS_BY = appending
NemuPython2_3_x86_TEMPLATE   = XPCOM$(if-expr "$(KBUILD_TARGET)" == "darwin",OSX104,-x86)
NemuPython2_3_x86_INCS       = $(NEMU_PYTHON23_INC)
NemuPython2_3_x86_LIBS       = $(NEMU_PYTHON23_LIB_X86)
 endif
endif

ifdef NEMU_PYTHON24_INC
#
# Python 2.4 version
#
DLLS += NemuPython2_4
NemuPython2_4_EXTENDS    = NemuPythonBase
NemuPython2_4_EXTENDS_BY = appending
NemuPython2_4_INCS       = $(NEMU_PYTHON24_INC)
NemuPython2_4_LIBS       = $(NEMU_PYTHON24_LIB)

 ifdef NEMU_WITH_32_ON_64_MAIN_API
DLLS += NemuPython2_4_x86
NemuPython2_4_x86_EXTENDS    = NemuPythonBase_x86
NemuPython2_4_x86_EXTENDS_BY = appending
NemuPython2_4_x86_INCS       = $(NEMU_PYTHON24_INC)
NemuPython2_4_x86_LIBS       = $(NEMU_PYTHON24_LIB_X86)
 endif
endif

ifdef NEMU_PYTHON25_INC
#
# Python 2.5 version
#
DLLS += NemuPython2_5
NemuPython2_5_EXTENDS    = NemuPythonBase
NemuPython2_5_EXTENDS_BY = appending
NemuPython2_5_INCS       = $(NEMU_PYTHON25_INC)
NemuPython2_5_LIBS       = $(NEMU_PYTHON25_LIB)

 ifdef NEMU_WITH_32_ON_64_MAIN_API
DLLS += NemuPython2_5_x86
NemuPython2_5_x86_EXTENDS    = NemuPythonBase_x86
NemuPython2_5_x86_EXTENDS_BY = appending
NemuPython2_5_x86_INCS       = $(NEMU_PYTHON25_INC)
NemuPython2_5_x86_LIBS       = $(NEMU_PYTHON25_LIB_X86)
 endif
endif

ifdef NEMU_PYTHON26_INC
#
# Python 2.6 version
#
DLLS += NemuPython2_6
NemuPython2_6_EXTENDS    = NemuPythonBase
NemuPython2_6_EXTENDS_BY = appending
NemuPython2_6_TEMPLATE   = XPCOM$(if-expr "$(KBUILD_TARGET)" == "darwin" && "$(NEMU_DEF_MACOSX_VERSION_MIN)" <= "10.6",OSX106,)
NemuPython2_6_INCS       = $(NEMU_PYTHON26_INC)
NemuPython2_6_LIBS       = $(NEMU_PYTHON26_LIB)

 ifdef NEMU_WITH_32_ON_64_MAIN_API
DLLS += NemuPython2_6_x86
NemuPython2_6_x86_EXTENDS    = NemuPythonBase_x86
NemuPython2_6_x86_EXTENDS_BY = appending
NemuPython2_6_x86_TEMPLATE   = XPCOM$(if-expr "$(KBUILD_TARGET)" == "darwin" && "$(NEMU_DEF_MACOSX_VERSION_MIN)" <= "10.6",OSX106,-x86)
NemuPython2_6_x86_INCS       = $(NEMU_PYTHON26_INC)
NemuPython2_6_x86_LIBS       = $(NEMU_PYTHON26_LIB_X86)
 endif
endif

ifdef NEMU_PYTHON27_INC
#
# Python 2.7 version
#
DLLS += NemuPython2_7
NemuPython2_7_EXTENDS    = NemuPythonBase
NemuPython2_7_EXTENDS_BY = appending
NemuPython2_7_TEMPLATE   = XPCOM$(if-expr "$(KBUILD_TARGET)" == "darwin" && "$(NEMU_DEF_MACOSX_VERSION_MIN)" <= "10.7",OSX107,)
NemuPython2_7_INCS       = $(NEMU_PYTHON27_INC)
NemuPython2_7_LIBS       = $(NEMU_PYTHON27_LIB)

 ifdef NEMU_WITH_32_ON_64_MAIN_API
DLLS += NemuPython2_7_x86
NemuPython2_7_x86_EXTENDS    = NemuPythonBase_x86
NemuPython2_7_x86_EXTENDS_BY = appending
NemuPython2_7_x86_TEMPLATE   = XPCOM$(if-expr "$(KBUILD_TARGET)" == "darwin" && "$(NEMU_DEF_MACOSX_VERSION_MIN)" <= "10.7",OSX107,-x86)
NemuPython2_7_x86_INCS       = $(NEMU_PYTHON27_INC)
NemuPython2_7_x86_LIBS       = $(NEMU_PYTHON27_LIB_X86)
 endif
endif

ifdef NEMU_PYTHONDEF_INC
#
# Python without versioning
#
DLLS += NemuPython
NemuPython_EXTENDS      = NemuPythonBase
NemuPython_DEFS         = $(filter-out NEMU_PYXPCOM_VERSIONED,$(NemuPythonBase_DEFS))
NemuPython_INCS         = $(NemuPythonBase_INCS) $(NEMU_PYTHONDEF_INC)
if "$(KBUILD_TARGET)" == "linux"
 NemuPython_LIBS        = $(NemuPythonBase_LIBS)
else
 NemuPython_LIBS        = $(NemuPythonBase_LIBS) $(NEMU_PYTHONDEF_LIB)
endif

 ifdef NEMU_WITH_32_ON_64_MAIN_API
NemuPython_x86_EXTENDS      = NemuPythonBase_x86
NemuPython_x86_DEFS         = $(filter-out NEMU_PYXPCOM_VERSIONED,$(NemuPythonBase_x86_DEFS))
NemuPython_x86_INCS         = $(NemuPythonBase_x86_INCS) $(NEMU_PYTHONDEF_INC)
if "$(KBUILD_TARGET)" == "linux"
 NemuPython_x86_LIBS        = $(NemuPythonBase_x86_LIBS)
else
 NemuPython_x86_LIBS        = $(NemuPythonBase_x86_LIBS) $(NEMU_PYTHONDEF_LIB_X86)
endif
 endif
endif

endif # NEMU_ONLY_SDK

#
# Install the python modules.
#
INSTALLS += NemuPython-inst-py-xpcom
NemuPython-inst-py-xpcom_INST = $(INST_SDK)bindings/xpcom/python/xpcom/
NemuPython-inst-py-xpcom_MODE = a+r,u+w
NemuPython-inst-py-xpcom_SOURCES = \
	nemuxpcom.py \
	components.py \
	file.py \
	__init__.py \
	nsError.py \
	primitives.py \
	xpcom_consts.py \
	xpt.py \
	client/__init__.py=>client/__init__.py \
	server/__init__.py=>server/__init__.py \
	server/enumerator.py=>server/enumerator.py \
	server/factory.py=>server/factory.py \
	server/loader.py=>server/loader.py \
	server/module.py=>server/module.py \
	server/policy.py=>server/policy.py


include $(FILE_KBUILD_SUB_FOOTER)

