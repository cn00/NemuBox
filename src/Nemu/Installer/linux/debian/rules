#!/usr/bin/make -f
#
# Copyright (C) 2006-2015 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

#
# NOTE: if you make changes to this file, please check if the updates should
# be also applied to the publicly visible debian/rules file.
#

#export DH_VERBOSE=1
export DH_COMPAT=4

# possible overrides:
#  OSE=1            force NEMU_OSE
#  NOPARALLEL=1     compile with -j1
#  LINUX=<dir>      compile nemudrv against Linux found in <dir>
#  VERBOSE=1        verbose build
#  DEBUG=1          debug build
#  NOSUBVER=1       disable generation of the sub-version field (which is
#                   either the subversion rev [if available] or the build date)
#  NODOCS=1         don't build docs, use precompiled UserManual.pdf and
#                   VirtualBox.chm from $HOME
#  NOMODS=1         don't build any module
#  NOQT=1           don't build the Qt GUI
#  EFI=1            include the EFI binary from prebuild
#  VERSUFFIX=<suffix> set a particular package version suffix (e.g. _customer)
#  HEADLESS=1       build the headless version
#  VNC=1            build VNC code
#  NOWEBSVC=1       don't build the webservice API, default for OSE
#  STAGEDISO=<path> don't build the NemuAdditions, use the precompiled .iso
#  PKGDIR=<path>    where to store the final package(s)
#  BLEEDING_EDGE=xyz

package  := virtualbox
verpkg   := virtualbox-5.0
current  := $(shell pwd)
nemuroot := $(shell cd ../../../..; pwd)
pkgdir   := $(if $(PKGDIR),$(PKGDIR),$(shell cd ../../../../..; pwd))
builddir := $(nemuroot)/out/debian/builddir
moddir   := $(nemuroot)/out/debian/modules
prefix   := $(current)/debian/$(verpkg)
arch     := $(shell dpkg --print-architecture)
verfile  := $(builddir)/version-generated.mk
ose      := $(if $(OSE),1,$(if $(wildcard $(nemuroot)/src/Nemu/RDP/server),,1))
-include $(nemuroot)/SVN_REVISION
svnrev   :=$(if $(svn_revision),$(svn_revision),)

NOMODS   ?= $(ose)
NOQT     ?= $(HEADLESS)
NOWEBSVC ?= $(ose)
NOWINE   := $(if $(NODOCS),$(if $(STAGEDISO),1,),)$(ose)

ifneq ($(wildcard $(verfile)),)
include $(verfile)
ver      := $(NEMU_VERSION_STRING)
svnver   := $(if $(NOSUBVER),,$(if $(svn_revision),-$(svn_revision),$(shell if \
		svn info > /dev/null 2>&1; then \
		svn info|sed -e "s/^Revision: \(.*\)/-\1/;t;d"; else \
		date +"-%Y%m%d"; fi)))
debver   :=$(subst _ALPHA,~alpha,$(subst _BETA,~beta,$(subst _RC,~rc,$(subst _OSE,~ose,$(ver)))))$(svnver)$(if \
		$(BLEEDING_EDGE),-$(BLEEDING_EDGE),)$(VERSUFFIX)$(if \
		$(HEADLESS),~headless,)$(if $(DEBUG),~dbg,)
archdir  := $(prefix)/opt/VirtualBox-$(ver)
endif

ifneq ($(STAGEDISO),)
 ifeq ($(wildcard $(STAGEDISO)/NemuGuestAdditions.iso),)
  $(error STAGEDISO='$(STAGEDISO)/NemuGuestAdditions.iso' not found)
 endif
endif

debrel  := $(if $(shell which lsb_release),_$(shell lsb_release -si)_$(shell lsb_release -sc),unknown)

ifneq ($(MAKECMDGOALS),clean)
 debdist  := $(strip $(shell grep $(debrel) $(current)/distributions_deb | cut -d'=' -f2))
 ifeq ($(debdist),)
  debdist := $(if $(shell which lsb_release),_$(shell lsb_release -si | tr a-z A-Z)_$(shell lsb_release -sr | sed -e 's/\./_/g' -e 's/\([^_]*\)\(_[^_]*\).*/\1\2/'),unknown)
  # $(error package distribution not detected (debrel=$(debrel)))
 endif
endif

# Location of custom built Qt libraries (see below)
qtstdc6  := /home/nemu/Qt-4.8.6-stdc++6-$(arch)

cfg_flags := $(if $(NOQT),--disable-qt,) \
	     $(if $(filter _Debian_squeeze,$(debrel)),--with-qt4-dir=$(qtstdc6)) \
	     $(if $(filter _Debian_squeeze,$(debrel)),--build-libvpx,) \
	     $(if $(ose),--ose,) $(if $(LINUX),--with-linux=$(LINUX),) \
	     $(if $(HEADLESS),--build-headless,) \
	     $(if $(DEBUG),--build-debug,) \
	     $(if $(NOWINE),,--setup-wine) \
	     $(if $(NOWEBSVC),,$(if $(ose),--enable-webservice,)) \
	     $(if $(VNC),--enable-vnc,) \
	     --disable-extpack

bld_flags := AUTOCFG=$(current)/debian/AutoConfig.kmk \
	     LOCALCFG=$(current)/debian/LocalConfig.kmk \
	     PATH_OUT=$(builddir) \
	     NEMU_WITHOUT_EXTPACK_PUEL_PACKING=1 \
	     NEMU_WITHOUT_EXTPACK_VNC_PACKING=1 \
	     $(if $(filter _Debian_squeeze _Ubuntu_lucid,$(debrel)),,NEMU_WITH_VMSVGA3D=1) \
	     NEMU_DO_STRIP= \
	     NEMU_WITH_MULTIVERSION_PYTHON= \
	     NEMU_PATH_PACKAGE_DOCS="\"/usr/share/doc/$(verpkg)\"" \
	     $(if $(ose),,NEMU_WITH_DOCS_CHM=1) \
	     NEMU_PACKAGE_DIST=$(debdist) \
	     $(if $(svnrev),NEMU_SVN_REV=$(svnrev),) \
	     $(if $(NODOCS),NEMU_WITH_DOCS= ,) \
	     $(if $(VERBOSE),--print-directory KBUILD_VERBOSE=2,--no-print-directory) \
	     $(if $(STAGEDISO),NEMU_WITHOUT_ADDITIONS=1,) \
	     $(if $(BLEEDING_EDGE),NEMU_BLEEDING_EDGE=$(BLEEDING_EDGE),)

configure: debian/configure-stamp
debian/configure-stamp:
	dh_testdir
	cd $(nemuroot) && ./configure --odir=$(current)/debian $(cfg_flags)
	touch debian/configure-stamp

build: debian/configure-stamp debian/build-stamp
debian/build-stamp $(verfile):
	dh_testdir
	. debian/env.sh && kmk -C $(nemuroot) $(bld_flags) $(if $(NOPARALLEL),-j1,) all
	$(if $(NODOCS),cp $(nemuroot)/prebuild/UserManual*.pdf $(builddir)/bin,)
	$(if $(NODOCS),cp $(nemuroot)/prebuild/VirtualBox*.chm $(builddir)/bin,)
	$(if $(EFI),cp $(nemuroot)/prebuild/NemuEFI32.fd $(builddir)/bin,)
	$(if $(EFI),cp $(nemuroot)/prebuild/NemuEFI64.fd $(builddir)/bin,)
	mkdir -p $(builddir)/bin/additions
	$(if $(STAGEDISO),cp $(STAGEDISO)/NemuGuestAdditions.iso $(builddir)/bin/additions,)
	. debian/env.sh && kmk -C $(nemuroot) $(bld_flags) \
	    NEMU_NO_LINUX_RUN_INSTALLER=1 \
	    NEMU_LNX_ADD_ARCHIVE.x86=$(builddir)/bin/additions/NemuGuestAdditions-x86.tar.bz2 \
	    NEMU_LNX_ADD_ARCHIVE.amd64=$(builddir)/bin/additions/NemuGuestAdditions-amd64.tar.bz2 \
	    NEMU_PATH_ADDITIONS.linux.x86=$(builddir)/bin/additions \
	    NEMU_PATH_ADDITIONS.linux.amd64=$(builddir)/bin/additions \
	    packing
	touch debian/build-stamp

# Build modules for every kernel we find in /lib/modules/*
modules: debian/build-stamp debian/modules-stamp
debian/modules-stamp: debian/build-stamp
	rm -rf $(moddir)
	mkdir $(moddir)
	make -C $(builddir)/bin/src/nemudrv clean
	for d in $(wildcard /lib/modules/*); do \
	    if [ -L $$d/build ]; then \
	        make -C $(builddir)/bin/src/nemudrv KERN_DIR=$$d/build MODULE_DIR=$$d clean && \
	        make -j4 -C $(builddir)/bin/src/nemudrv KBUILD_VERBOSE= KERN_DIR=$$d/build MODULE_DIR=$$d all \
	        $(if $(instmod),&& install -D -m 0644 -g 0 -o 0 \
	            $(builddir)/bin/src/nemudrv/nemudrv.ko $(moddir)/$$(basename $$d)/nemudrv.ko); \
	        make -C $(builddir)/bin/src/nemunetflt KERN_DIR=$$d/build MODULE_DIR=$$d clean && \
		(cp $(builddir)/bin/src/nemudrv/Module.symvers $(builddir)/bin/src/nemunetflt || true) && \
	        make -j4 -C $(builddir)/bin/src/nemunetflt KBUILD_VERBOSE= KERN_DIR=$$d/build MODULE_DIR=$$d all \
	        $(if $(instmod),&& install -D -m 0644 -g 0 -o 0 \
	            $(builddir)/bin/src/nemunetflt/nemunetflt.ko $(moddir)/$$(basename $$d)/nemunetflt.ko); \
	        make -C $(builddir)/bin/src/nemunetadp KERN_DIR=$$d/build MODULE_DIR=$$d clean && \
		(cp $(builddir)/bin/src/nemudrv/Module.symvers $(builddir)/bin/src/nemunetadp || true) && \
	        make -j4 -C $(builddir)/bin/src/nemunetadp KBUILD_VERBOSE= KERN_DIR=$$d/build MODULE_DIR=$$d all \
	        $(if $(instmod),&& install -D -m 0644 -g 0 -o 0 \
	            $(builddir)/bin/src/nemunetadp/nemunetadp.ko $(moddir)/$$(basename $$d)/nemunetadp.ko); \
	        make -C $(builddir)/bin/src/nemupci KERN_DIR=$$d/build MODULE_DIR=$$d clean && \
		(cp $(builddir)/bin/src/nemudrv/Module.symvers $(builddir)/bin/src/nemupci || true) && \
	        make -j4 -C $(builddir)/bin/src/nemupci KBUILD_VERBOSE= KERN_DIR=$$d/build MODULE_DIR=$$d all \
	        $(if $(instmod),&& install -D -m 0644 -g 0 -o 0 \
	            $(builddir)/bin/src/nemupci/nemupci.ko $(moddir)/$$(basename $$d)/nemupci.ko); \
	    fi; \
	done
	make -C $(builddir)/bin/src/nemudrv clean
	make -C $(builddir)/bin/src/nemunetflt clean
	make -C $(builddir)/bin/src/nemunetadp clean
	make -C $(builddir)/bin/src/nemupci clean
	touch debian/modules-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f debian/changelog
	rm -f debian/preinst debian/postinst debian/prerm
	rm -f debian/$(package).init debian/nemudrv.init
	rm -f debian/nemuballoonctrl-service.init debian/nemuautostart-service.init debian/nemuweb-service.init
	rm -f debian/AutoConfig.kmk debian/configure.log debian/env.sh
	rm -f debian/modules-stamp debian/build-stamp debian/configure-stamp
	rm -f debian/virtualbox-*.substvars debian/virtualbox*.debhelper
	rm -f debian/$(verpkg).mime
	rm -rf $(builddir) $(moddir)
	rm -rf debian/wine.*
	dh_clean

ifeq ($(NEMU_VERSION_MAJOR),)
binary binary-arch binary-indep: build $(verfile)
	$(MAKE) -f debian/rules binary
else
# Build architecture-dependent files here.
binary binary-arch binary-indep: build $(if $(NOMODS),,modules)
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs
	tar -xC $(prefix)/opt -f $(builddir)/bin/VirtualBox.tar
	$(if $(NOQT),,mv $(archdir)/virtualbox.xml debian/$(verpkg).sharedmimeinfo)
	$(archdir)/scripts/install.sh --package $(package) --root $(prefix) \
	    --prefix /usr $(if $(NOQT),--no-qt) $(if $(ose),--ose) \
	    $(if $(HEADLESS),--headless) $(if $(NOWEBSVC),--no-web-service) \
	    --install-folder /lib/$(package) --no-helpers
	install -d -g 0 -o 0 $(prefix)/usr/share/doc/$(verpkg)
	install -d -g 0 -o 0 $(prefix)/usr/share/lintian/overrides
	sed \
	    -e 's|%VERPKG%|$(verpkg)|g' \
	    debian/lintian-override.in > \
	   $(prefix)/usr/share/lintian/overrides/$(verpkg)
	$(if $(NOMODS),,for d in $(moddir)/*; do \
	    if [ -f $$d/nemudrv.ko -a -f $$d/nemunetflt.ko -a -f $$d/nemunetadp.ko -a -f $$d/nemupci.ko ]; then \
	        install -D -g 0 -o 0 -m 0644 \
		    $$d/nemudrv.ko $(prefix)/lib/modules/$$(basename $$d)/misc/nemudrv.ko; \
	        install -D -g 0 -o 0 -m 0644 \
		    $$d/nemunetflt.ko $(prefix)/lib/modules/$$(basename $$d)/misc/nemunetflt.ko; \
	        install -D -g 0 -o 0 -m 0644 \
		    $$d/nemunetadp.ko $(prefix)/lib/modules/$$(basename $$d)/misc/nemunetadp.ko; \
	        install -D -g 0 -o 0 -m 0644 \
		    $$d/nemupci.ko $(prefix)/lib/modules/$$(basename $$d)/misc/nemupci.ko; \
	    fi \
	    done)
ifeq ($(ose),)
	dh_installdocs \
	    $(archdir)/UserManual*.pdf $(archdir)/VirtualBox*.chm \
	    $(addprefix $(archdir)/, LICENSE)
	rm $(addprefix $(archdir)/,UserManual*.pdf VirtualBox*.chm \
	    LICENSE)
else
	dh_installdocs \
	    $(archdir)/UserManual*.pdf
	rm $(addprefix $(archdir)/,UserManual*.pdf)
endif
	mv $(archdir) $(prefix)/usr/lib/$(package)
	ln -s ../NemuVMM.so $(prefix)/usr/lib/$(package)/components/NemuVMM.so
	rmdir $(prefix)/opt
	dh_desktop
	$(if $(NOMODS),,dh_installmodules)
	sed \
	    -e 's|%NOLSB%||g' \
	    -e 's|%DEBIAN%|yes|g' \
	    -e 's|%PACKAGE%|virtualbox|g' \
	    -e "s|%VERSION%|$(NEMU_VERSION_STRING)|g" \
	    -e "s|%GROUP%|$(if $(NEMU_WITHOUT_HARDENING),nemuusers,root)|g" \
	    $(nemuroot)/src/Nemu/Installer/linux/nemudrv.sh.in > $(prefix)/usr/lib/$(package)/nemudrv.sh
	cp $(nemuroot)/src/Nemu/Installer/linux/nemuballoonctrl-service.sh $(prefix)/usr/lib/$(package)
	cp $(nemuroot)/src/Nemu/Installer/linux/nemuautostart-service.sh $(prefix)/usr/lib/$(package)
	cp $(nemuroot)/src/Nemu/Installer/linux/nemuweb-service.sh $(prefix)/usr/lib/$(package)
	sed -e 's|%VER%|$(debver)|g' \
	    -e 's|%DATE%|$(shell date -R)|g' \
	    -e 's|%DEBREL%|$(subst _,~,$(debrel))|g' \
	    -e 's|%VERPKG%|$(verpkg)|g' \
	    debian/changelog.in > debian/changelog
	sed -e 's|%VER%|$(ver)|g' \
	    debian/preinst.in > debian/preinst
	sed -e 's|%VER%|$(ver)|g' \
	    debian/prerm.in > debian/prerm
	sed -e 's|%VER%|$(ver)|g' \
	    -e '/#include installer-common.sh/ {' \
	    -e "r $(nemuroot)/src/Nemu/Installer/linux/installer-common.sh" \
	    -e 'd' \
	    -e '}' \
	    debian/postinst.in > debian/postinst
	dh_installdebconf
	dh_installchangelogs
	dh_installmenu
	dh_installmime
	dh_link
ifeq ($(DEBUG),)
	dh_strip --keep-debug --exclude=libQtCoreNemu.so.4 --exclude=libQtGuiNemu.so.4 --exclude=libQtOpenGLNemu.so.4 --exclude=libqtaccessiblewidgets.so
endif
	mkdir -p $(current)/debian/$(verpkg)-dbg/usr/lib/$(package)
	mv $(prefix)/usr/lib/$(package)/*.debug $(current)/debian/$(verpkg)-dbg/usr/lib/$(package)
ifeq ($(DEBUG),)
	mv $(prefix)/usr/lib/debug $(current)/debian/$(verpkg)-dbg/usr/lib
endif
	$(if $(filter _Ubuntu_hardy _Ubuntu_lucid,$(debrel)),dh_pycentral,dh_python2)
	dh_compress -X.pdf -X.chm -X LICENSE -X.py
	dh_fixperms
	dh_makeshlibs
	dh_installdeb
	dh_perl
	# for some reason, the Qt libraries couldn't be found on newer releases (e.g. Ubuntu hardy)
	LD_LIBRARY_PATH=$(prefix)/usr/lib/virtualbox dh_shlibdeps
	dh_gencontrol -- \
	  -Valsa=$(if $(HEADLESS),,libasound2) \
	  -Vpulse=$(if $(HEADLESS),,libpulse0) \
	  -Vsdlttf=$(if $(HEADLESS),,libsdl-ttf2.0-0) \
	  -Vdkms=$(if $(filter _Debian_lenny,$(debrel)),,dkms)
	dh_md5sums
	dh_builddeb --destdir $(pkgdir) -- \
	  $(if $(filter _Ubuntu_lucid,$(debrel)),,-Zxz)
endif

.PHONY: binary modules binary-arch binary-indep clean checkroot
