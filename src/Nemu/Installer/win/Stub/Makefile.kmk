# $Id: Makefile.kmk $
## @file
# Sub-Makefile for the stub installer.
#

#
# Copyright (C) 2009-2015 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

SUB_DEPTH = ../../../../..
include $(KBUILD_PATH)/subheader.kmk

# This has to be 32-bit, so don't include it in the 64-bit build.
if "$(KBUILD_TARGET_ARCH)" == "x86"

 TEMPLATE_NEMUSTUB = Drop the signing, we will sign it later.
 TEMPLATE_NEMUSTUB_EXTENDS = NEMUR3STATIC
 TEMPLATE_NEMUSTUB_POST_CMDS = $(NO_SUCH_VARIABLE)

 PROGRAMS += NemuStub
 NemuStub_TEMPLATE= NEMUSTUB
 NemuStub_DEFS    = _WIN32_WINNT=0x0501 IN_RT_R3

 NemuStub_SOURCES = \
 	NemuStub.cpp \
 	NemuStub.rc

 NemuStub_SDKS += \
 	NEMU_NTDLL
 NemuStub_LIBS = \
 	$(NEMU_LIB_RUNTIME_STATIC) \
       $(PATH_TOOL_$(NEMU_VCC_TOOL)_LIB)/delayimp.lib
 NemuStub_LDFLAGS = \
 	-DelayLoad:comctl32.dll
 NemuStub_POST_CMDS = $(NEMU_CHECK_IMPORTS) --image $(out) ntdll.dll kernel32.dll
 NemuStub_LNK_DEPS  = $(NEMU_CHECK_IMPORTS)

 NemuStub.cpp_DEFS += NEMU_SVN_REV=$(NEMU_SVN_REV)
 NemuStub.cpp_DEPS  = $(NEMU_SVN_REV_KMK)

 # If signing mode is enabled, then add the possibility to
 # install public certificate automatically in /silent mode
 ifdef NEMU_SIGNING_MODE

  NemuStub_SOURCES  += NemuStubCertUtil.cpp
  NemuStub.cpp_DEPS += $(NemuStub_0_OUTDIR)/NemuStubPublicCert.h
  NemuStub.cpp_INCS += $(NemuStub_0_OUTDIR)
  NemuStub.cpp_DEFS += NEMU_WITH_CODE_SIGNING

  $$(NemuStub_0_OUTDIR)/NemuStubPublicCert.h: $(NEMU_BIN2C) $(PATH_ROOT)/src/Nemu/Additions/WINNT/tools/oracle-nemu.cer | $$(dir $$@)
	$(NEMU_BIN2C) _NemuStubPublicCert $(PATH_ROOT)/src/Nemu/Additions/WINNT/tools/oracle-nemu.cer $@

 endif

 # The icon location is configurable.
 NemuStub.rc_INCS += $(NemuStub_0_OUTDIR)
 NemuStub.rc_DEPS += \
 	$(NemuStub_0_OUTDIR)/NemuStub-icon.rc \
 	$(NemuStub_0_OUTDIR)/NemuStub-manifest.rc
 NemuStub.rc_CLEAN = \
 	$(NemuStub_0_OUTDIR)/NemuStub-icon.rc \
 	$(NemuStub_0_OUTDIR)/NemuStub-manifest.rc

 # Icon include file.
 $$(NemuStub_0_OUTDIR)/NemuStub-icon.rc: $(NEMU_WINDOWS_ICON_FILE) $(MAKEFILE_CURRENT) | $$(dir $$@)
	$(APPEND) -t $@ 'IDI_VIRTUALBOX ICON DISCARDABLE "$(subst /,\\,$(NEMU_WINDOWS_ICON_FILE))"'

 # Manifest.
 NEMU_STUB_MANIFEST_FILE := $(PATH_SUB_CURRENT)/NemuStub.manifest
 $$(NemuStub_0_OUTDIR)/NemuStub-manifest.rc: $(NEMU_STUB_MANIFEST_FILE) $(MAKEFILE_CURRENT) | $$(dir $$@)
	$(APPEND) -t $@ 'APP_MANIFEST RT_MANIFEST "$(subst /,\\,$(NEMU_STUB_MANIFEST_FILE))"'

 # Dynamic import no. 1: MSI.DLL
 NemuStub_SOURCES += $(NemuStub_0_OUTDIR)/MsiLazyLoad.asm
 $$(NemuStub_0_OUTDIR)/MsiLazyLoad.asm: $(PATH_SUB_CURRENT)/msi.def $(NEMU_DEF_2_LAZY_LOAD) | $$(dir $$@)
	$(call MSG_TOOL,NemuDef2LazyLoad,NemuStub,$(filter %.def, $^),$@)
	$(QUIET)$(RM) -f -- "$@"
	$(NEMU_DEF_2_LAZY_LOAD) --system --library MSI.DLL --output "$@" $(filter %.def, $^)

 # Dynamic import no. 2: CRYPTO32.DLL
 NemuStub_SOURCES += $(NemuStub_0_OUTDIR)/Crypt32LazyLoad.asm
 $$(NemuStub_0_OUTDIR)/Crypt32LazyLoad.asm: $(PATH_SUB_CURRENT)/crypt32.def $(NEMU_DEF_2_LAZY_LOAD) | $$(dir $$@)
	$(call MSG_TOOL,NemuDef2LazyLoad,NemuStub,$(filter %.def, $^),$@)
	$(QUIET)$(RM) -f -- "$@"
	$(NEMU_DEF_2_LAZY_LOAD) --system --library CRYPT32.DLL --output "$@" $(filter %.def, $^)

 # Dynamic import no. 3: WS2_32.DLL
 NemuStub_SOURCES += $(NemuStub_0_OUTDIR)/Ws232LazyLoad.asm
 $$(NemuStub_0_OUTDIR)/Ws232LazyLoad.asm: $(PATH_SUB_CURRENT)/ws2_32.def $(NEMU_DEF_2_LAZY_LOAD) | $$(dir $$@)
	$(call MSG_TOOL,NemuDef2LazyLoad,NemuStub,$(filter %.def, $^),$@)
	$(QUIET)$(RM) -f -- "$@"
	$(NEMU_DEF_2_LAZY_LOAD) --system --library WS2_32.DLL --output "$@" $(filter %.def, $^)

 # Dynamic import no. 4: USER32.DLL
 NemuStub_SOURCES += $(NemuStub_0_OUTDIR)/User32LazyLoad.asm
 $$(NemuStub_0_OUTDIR)/User32LazyLoad.asm: $(PATH_SUB_CURRENT)/user32.def $(NEMU_DEF_2_LAZY_LOAD) | $$(dir $$@)
	$(call MSG_TOOL,NemuDef2LazyLoad,NemuStub,$(filter %.def, $^),$@)
	$(QUIET)$(RM) -f -- "$@"
	$(NEMU_DEF_2_LAZY_LOAD) --system --library USER32.DLL --output "$@" $(filter %.def, $^)

 # Dynamic import no. 5: SHELL32.DLL
 NemuStub_SOURCES += $(NemuStub_0_OUTDIR)/Shell32LazyLoad.asm
 $$(NemuStub_0_OUTDIR)/Shell32LazyLoad.asm: $(PATH_SUB_CURRENT)/shell32.def $(NEMU_DEF_2_LAZY_LOAD) | $$(dir $$@)
	$(call MSG_TOOL,NemuDef2LazyLoad,NemuStub,$(filter %.def, $^),$@)
	$(QUIET)$(RM) -f -- "$@"
	$(NEMU_DEF_2_LAZY_LOAD) --system --library SHELL32.DLL --output "$@" $(filter %.def, $^)


endif # x86 only

include $(FILE_KBUILD_SUB_FOOTER)
