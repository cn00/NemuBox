# $Id: Makefile.kmk $
## @file
# Install misc stuff and create dist packages for Mac OS X.
#

#
# Copyright (C) 2006-2015 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

SUB_DEPTH = ../../../..
include $(KBUILD_PATH)/subheader.kmk


#
# Globals
#
NEMU_PATH_DI_SRC := $(PATH_SUB_CURRENT)
NEMU_DI_OUT_DIR  := $(PATH_TARGET)/Installer/darwin
BLDDIRS += $(NEMU_DI_OUT_DIR)

NEMU_DI_FN_DEP_BOTH = $(NEMU_PATH_DIST)/$1
ifeq ($(KBUILD_TARGET_ARCH),x86)
 NEMU_DI_FN_DEP_32  = $(NEMU_PATH_DIST)/$1
 NEMU_DI_FN_DEP_64  =
else
 NEMU_DI_FN_DEP_64  = $(NEMU_PATH_DIST)/$1
 NEMU_DI_FN_DEP_32  =
endif
NEMU_PATH_DIST_OTHER = $(error NEMU_PATH_DIST_OTHER used in a non-combined package deal)

# Unset this to speed up things during makefile hacking.
NEMU_DARWIN_INST_DEP_ON_MAKEFILE := $(MAKEFILE_CURRENT)

# The location of the pkgbuild program.
ifndef NEMU_PKGBUILD
 NEMU_PKGBUILD := pkgbuild
endif

# The location of the productbuild program.
ifndef NEMU_PRODUCTBUILD
 NEMU_PRODUCTBUILD := productbuild
endif

# Where we do the packing (override this in LocalConfig.kmk if building on smbfs).
ifndef NEMU_PATH_PACK_TMP
 NEMU_PATH_PACK_TMP := $(NEMU_DI_OUT_DIR)
endif

# Shorthand for $(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.root/Applications/VirtualBox.app
NEMU_PATH_NEMU_APP_TMP := $(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.root/Applications/VirtualBox.app


#
# Install the darwin docs/license.
#
INSTALLS += darwin-docs
darwin-docs_INST = $(INST_DIST)
darwin-docs_MODE = a+r,u+w
darwin-docs_SOURCES = \
	$(NEMU_BRAND_LICENSE_TXT)=>LICENSE


#
# The packing.
#
PACKING += $(NEMU_PATH_DIST)/VirtualBox-$(NEMU_VERSION_MAJOR).$(NEMU_VERSION_MINOR).$(NEMU_VERSION_BUILD)-r$(NEMU_SVN_REV).dmg
#OTHER_CLEAN = TODO


include $(FILE_KBUILD_SUB_FOOTER)


#
# We're running commands as root here, take some care and assertion
# a sane environment.
#
ifeq ($(strip $(NEMU_PATH_DIST)),)
 $(error NEMU_PATH_DIST=$(NEMU_PATH_DIST))
endif
ifeq ($(strip $(NEMU_PATH_DIST)),/)
 $(error NEMU_PATH_DIST=$(NEMU_PATH_DIST))
endif
ifeq ($(strip $(NEMU_PATH_PACK_TMP)),)
 $(error NEMU_PATH_PACK_TMP=$(NEMU_PATH_PACK_TMP))
endif
ifeq ($(strip $(NEMU_PATH_PACK_TMP)),/)
 $(error NEMU_PATH_PACK_TMP=$(NEMU_PATH_PACK_TMP))
endif


# Check for additional manuals
NEMU_ADD_MANUALS := $(foreach f,$(NEMU_MANUAL_ADD_LANGUAGES),$(NEMU_PATH_DIST)/VirtualBox.app/Contents/MacOS/UserManual_$(f).pdf)

NEMU_ADD_MANUAL_de_DE := $(filter $(NEMU_PATH_DIST)/VirtualBox.app/Contents/MacOS/UserManual_de_DE.pdf,$(NEMU_ADD_MANUALS))
NEMU_ADD_MANUAL_fr_FR := $(filter $(NEMU_PATH_DIST)/VirtualBox.app/Contents/MacOS/UserManual_fr_FR.pdf,$(NEMU_ADD_MANUALS))

#
# The disk image.
#
$(NEMU_PATH_DIST)/VirtualBox-$(NEMU_VERSION_MAJOR).$(NEMU_VERSION_MINOR).$(NEMU_VERSION_BUILD)-r$(NEMU_SVN_REV).dmg: \
		$(NEMU_PATH_PACK_TMP)/DiskImage/VirtualBox.pkg \
		$(NEMU_BRAND_DARWIN_DISKIMAGE_BG) \
		$(NEMU_BRAND_DARWIN_DISKIMAGE_DS_STORE) \
		$$(wildcard $(NEMU_PATH_DI_SRC)/DiskImage/*) \
		$(if $(NEMU_WITH_DOCS_PACKING), \
			$(NEMU_PATH_DIST)/VirtualBox.app/Contents/MacOS/UserManual.pdf \
			$(NEMU_ADD_MANUALS)) \
		$(NEMU_DARWIN_INST_DEP_ON_MAKEFILE)
	$(call MSG_TOOL,hdiutil,,,$@)
	@# Cleanup any previously failed attempts and various trash.
	sudo rm -Rf $(NEMU_PATH_PACK_TMP)/DiskImage.tmp
	$(MKDIR) -p $(NEMU_PATH_PACK_TMP)/DiskImage.tmp/
	sudo mv $(NEMU_PATH_PACK_TMP)/DiskImage/VirtualBox.pkg $(NEMU_PATH_PACK_TMP)/DiskImage.tmp/
	sudo rm -Rf \
		$@ \
		$(NEMU_PATH_PACK_TMP)/DiskImage/
	sudo mv $(NEMU_PATH_PACK_TMP)/DiskImage.tmp $(NEMU_PATH_PACK_TMP)/DiskImage
	@# Remove .dmg packages from old depend builds
	$(QUIET)$(RM) -f $(wildcard $(NEMU_PATH_DIST)/VirtualBox-*-r*.dmg)
	@# Populate the image with uninstaller, readme, picture, and .VolumeIcon.icns. (TODO)
	$(INSTALL) $(NEMU_PATH_DI_SRC)/DiskImage/VirtualBox_Uninstall.tool  $(NEMU_PATH_PACK_TMP)/DiskImage/
if defined(NEMU_SIGNING_MODE) && defined(NEMU_NOT_OSX_105)
	$(call NEMU_SIGN_FILE_FN,$(NEMU_PATH_PACK_TMP)/DiskImage/VirtualBox_Uninstall.tool,org.virtualbox.dmg.uninstaller)
endif
ifeq (1,1)
	@# Pedantic mode...
	$(INSTALL) -m 644 $(NEMU_BRAND_DARWIN_DISKIMAGE_DS_STORE)           $(NEMU_PATH_PACK_TMP)/DiskImage/.DS_Store
	$(MKDIR) $(NEMU_PATH_PACK_TMP)/DiskImage/.background
	$(INSTALL) -m 644 $(NEMU_BRAND_DARWIN_DISKIMAGE_BG)                 $(NEMU_PATH_PACK_TMP)/DiskImage/.background/nemu_folder.tiff
 ifdef NEMU_WITH_BUNDLED_INSTALLER
	$(if $(NEMU_WITH_DOCS_PACKING), \
		$(INSTALL) -m 644 $(NEMU_PATH_DIST)/VirtualBox.app/Contents/MacOS/UserManual.pdf $(NEMU_PATH_PACK_TMP)/DiskImage/User\ Manual.pdf$(NLTAB) \
		$(if $(NEMU_ADD_MANUAL_de_DE),$(INSTALL) -m 644 $(NEMU_ADD_MANUAL_de_DE) "$(NEMU_PATH_PACK_TMP)/DiskImage/$(NEMU_BRAND_de_DE_MANUAL_NAME).pdf"$(NLTAB)) \
		$(if $(NEMU_ADD_MANUAL_fr_FR),$(INSTALL) -m 644 $(NEMU_ADD_MANUAL_fr_FR) "$(NEMU_PATH_PACK_TMP)/DiskImage/$(NEMU_BRAND_fr_FR_MANUAL_NAME).pdf"$(NLTAB)))
    # Rename the main package
 else
	$(if $(NEMU_WITH_DOCS_PACKING), $(INSTALL) $(NEMU_PATH_DIST)/VirtualBox.app/Contents/MacOS/UserManual.pdf $(NEMU_PATH_PACK_TMP)/DiskImage/)
	$(LN) -s /Applications/                                             $(NEMU_PATH_PACK_TMP)/DiskImage/Applications
 endif
endif
	@# hdiutil of OS X 10.10 adds a .Trashes directory and some suggest this may upset the image size calculations (-5341).
	$(MKDIR) -m 1333  $(NEMU_PATH_PACK_TMP)/DiskImage/.Trashes
	@# Change the owners.
	sudo chown -R root:admin $(NEMU_PATH_PACK_TMP)/DiskImage
	@# Create the image. We calculate the size our selves, adding 8MB for fudging (it's about 100-120MB atm).
	sudo hdiutil create -format UDBZ -volname "VirtualBox" -srcfolder "$(NEMU_PATH_PACK_TMP)/DiskImage" \
		-size $(DOLLAR)((`/usr/bin/du -d 0 -k "$(NEMU_PATH_PACK_TMP)/DiskImage/" | /usr/bin/cut -f1` + 8192))k \
		"$@"
	@# Change (back) the owner so it can be deleted by the user.
	sudo chown "$(shell whoami)" "$@"
	sudo chown -R "$(shell whoami)" $(NEMU_PATH_PACK_TMP)/DiskImage

#
# The meta-package.
#
$(NEMU_PATH_PACK_TMP)/DiskImage/VirtualBox.pkg: \
		$(NEMU_PATH_PACK_TMP)/Packages/NemuKEXTs.pkg \
		$(NEMU_PATH_PACK_TMP)/Packages/VirtualBoxCLI.pkg \
		$(NEMU_PATH_PACK_TMP)/Packages/VirtualBox.pkg \
		$$(wildcard $(NEMU_PATH_DI_SRC)/VirtualBox_mpkg/* \
		            $(NEMU_PATH_DI_SRC)/VirtualBox_mpkg/*.lproj/*) \
		$(foreach f,$(NEMU_INSTALLER_ADD_LANGUAGES), $(NEMU_BRAND_$(f)_VIRTUALBOX_WELCOME_RTF)) \
		$(NEMU_DARWIN_INST_DEP_ON_MAKEFILE)
	$(call MSG_TOOL,productbuild,,,$@)
	@# Cleanup any previously failed attempts.
	sudo rm -Rf \
		$@ \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.dist.root \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.dist.desc \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.dist.res
	@# Correct directory permissions are important.
	$(MKDIR) -p \
		$(@D) \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.dist.desc \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.dist.res \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.dist.res/English.lproj
	@# Do keyword replacement in the package info and description files.
	$(SED) \
		-e 's/@NEMU_VERSION_STRING@/$(NEMU_VERSION_STRING)/g' \
		-e 's/@NEMU_VERSION_MAJOR@/$(NEMU_VERSION_MAJOR)/g' \
		-e 's/@NEMU_VERSION_MINOR@/$(NEMU_VERSION_MINOR)/g' \
		-e 's/@NEMU_VERSION_BUILD@/$(NEMU_VERSION_BUILD)/g' \
		-e 's/@NEMU_VENDOR@/$(NEMU_VENDOR)/g' \
		-e 's/@NEMU_PRODUCT@/$(NEMU_PRODUCT)/g' \
		-e 's/@NEMU_C_YEAR@/$(NEMU_C_YEAR)/g' \
		--output $(NEMU_PATH_PACK_TMP)/VirtualBox.dist.res/English.lproj/Welcome.rtf \
		$(NEMU_PATH_DI_SRC)/VirtualBox_mpkg/Welcome.rtf
	@# Copy the resources.
	$(INSTALL) -m 0644 $(NEMU_PATH_DI_SRC)/VirtualBox_mpkg/Conclusion.rtf                   $(NEMU_PATH_PACK_TMP)/VirtualBox.dist.res/English.lproj/Conclusion.rtf
	$(SED) \
		-e 's/@NEMU_VENDOR@/$(NEMU_VENDOR)/g' \
		-e 's/@NEMU_PRODUCT@/$(NEMU_PRODUCT)/g' \
		-e 's/@NEMU_C_YEAR@/$(NEMU_C_YEAR)/g' \
		--output $(NEMU_PATH_PACK_TMP)/VirtualBox.dist.res/English.lproj/Localizable.strings \
		$(NEMU_PATH_DI_SRC)/VirtualBox_mpkg/Localizable.strings
	$(INSTALL) -m 0644 $(NEMU_BRAND_DARWIN_INSTALLER_BG)                                    $(NEMU_PATH_PACK_TMP)/VirtualBox.dist.res/background.tif
	$(foreach f,$(NEMU_INSTALLER_ADD_LANGUAGES), \
		$(MKDIR) -p \
			$(NEMU_PATH_PACK_TMP)/VirtualBox.dist.res/$(NEMU_INSTALLER_$(f)_DARWIN_TARGET).lproj$(NLTAB) \
		$(SED) \
			-e 's/@NEMU_VERSION_STRING@/$(NEMU_VERSION_STRING)/g' \
			-e 's/@NEMU_VERSION_MAJOR@/$(NEMU_VERSION_MAJOR)/g' \
			-e 's/@NEMU_VERSION_MINOR@/$(NEMU_VERSION_MINOR)/g' \
			-e 's/@NEMU_VERSION_BUILD@/$(NEMU_VERSION_BUILD)/g' \
			--output $(NEMU_PATH_PACK_TMP)/VirtualBox.dist.res/$(NEMU_INSTALLER_$(f)_DARWIN_TARGET).lproj/Welcome.rtf \
			$(NEMU_BRAND_$(f)_VIRTUALBOX_WELCOME_RTF)$(NLTAB) \
		$(INSTALL) -m 0644 $(NEMU_BRAND_$(f)_VIRTUALBOX_CONCLUSION_RTF)                $(NEMU_PATH_PACK_TMP)/VirtualBox.dist.res/$(NEMU_INSTALLER_$(f)_DARWIN_TARGET).lproj/Conclusion.rtf$(NLTAB) \
		$(SED) \
			-e 's/@NEMU_VENDOR@/$(NEMU_VENDOR)/g' \
			-e 's/@NEMU_PRODUCT@/$(NEMU_PRODUCT)/g' \
			-e 's/@NEMU_C_YEAR@/$(NEMU_C_YEAR)/g' \
			--output $(NEMU_PATH_PACK_TMP)/VirtualBox.dist.res/$(NEMU_INSTALLER_$(f)_DARWIN_TARGET).lproj/Localizable.strings \
			$(NEMU_BRAND_$(f)_VIRTUALBOX_LOCALIZABLE_STRINGS)$(NLTAB) \
	)
	@# Build the package.
	$(NEMU_PRODUCTBUILD) \
		--distribution $(NEMU_PATH_DI_SRC)/VirtualBox_mpkg/distribution.dist \
		--package-path $(NEMU_PATH_PACK_TMP)/Packages \
		--resources $(NEMU_PATH_PACK_TMP)/VirtualBox.dist.res \
		--identifier org.VirtualBox.mpkg.virtualbox \
		--version $(NEMU_VERSION_MAJOR).$(NEMU_VERSION_MINOR).$(NEMU_VERSION_BUILD) \
		$(if $(NEMU_MACOSX_INSTALLER_SIGN),--sign "$(NEMU_MACOSX_INSTALLER_SIGN)",) \
		$@
	@# Cleanup.
	sudo rm -Rf \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.dist.root \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.dist.desc \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.dist.res


#
# The VirtualBox Kernel extensions.
#
NEMU_DI_KEXTS_UNIVERSAL = NemuDrv NemuNetFlt NemuNetAdp NemuUSB
NEMU_DI_KEXTS = $(NEMU_DI_KEXTS_UNIVERSAL)

$(NEMU_PATH_PACK_TMP)/Packages/NemuKEXTs.pkg: \
		$(foreach kext,$(NEMU_DI_KEXTS_UNIVERSAL), $(call NEMU_DI_FN_DEP_BOTH,$(kext).kext/Contents/MacOS/$(kext))) \
		$(foreach kext,$(NEMU_DI_KEXTS), $(NEMU_PATH_DIST)/$(kext).kext/Contents/Info.plist) \
		$$(wildcard $(NEMU_PATH_DI_SRC)/NemuKEXTs/* \
		            $(NEMU_PATH_DI_SRC)/NemuKEXTs/*.lproj/*) \
		$(foreach f,$(NEMU_INSTALLER_ADD_LANGUAGES), \
			$(NEMU_BRAND_$(f)_NEMUKEXTS_DESCRIPTION_PLIST) \
			$(NEMU_BRAND_$(f)_NEMUKEXTS_README_HTML) \
			$(NEMU_BRAND_$(f)_NEMUKEXTS_INSTALLATIONCHECK_STRINGS)) \
		$(NEMU_DARWIN_INST_DEP_ON_MAKEFILE)
	$(call MSG_TOOL,pkgbuild,,,$@)
	@# Cleanup any previously failed attempts.
	sudo rm -Rf \
		$@ \
		$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root \
		$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.desc \
		$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.res
	@# Correct directory permissions are important.
	$(MKDIR) -p \
		$(@D) \
		$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.desc \
		$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.res \
		$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.res/English.lproj
	$(MKDIR) -p -m 0755 \
		$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root \
		$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root/LaunchDaemons \
		$(foreach kext,$(NEMU_DI_KEXTS), \
			$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root/$(kext).kext \
			$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root/$(kext).kext/Contents \
			$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root/$(kext).kext/Contents/MacOS )
	@# Copy the launch daemon bits.
	$(INSTALL) -m 0755  $(NEMU_PATH_DI_SRC)/NemuKEXTs/VirtualBoxStartup.sh          $(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root/LaunchDaemons/
	$(INSTALL) -m 0644  $(NEMU_PATH_DI_SRC)/NemuKEXTs/org.virtualbox.startup.plist 	$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root/LaunchDaemons/
	@# Copy the common files (Info.plist).
	$(foreach kext,$(NEMU_DI_KEXTS), \
		$(NLTAB)$(INSTALL) -m 0644 $(NEMU_PATH_DIST)/$(kext).kext/Contents/Info.plist $(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root/$(kext).kext/Contents/)
	@# Copy the binaries and invoking lipo.
	$(foreach kext,$(NEMU_DI_KEXTS), \
		$(NLTAB)$(INSTALL) -m 0755 $(NEMU_PATH_DIST)/$(kext).kext/Contents/MacOS/$(kext) $(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root/$(kext).kext/Contents/MacOS/)
	@# Signed the kext bundles.
ifdef NEMU_SIGNING_MODE
	$(foreach kext,$(NEMU_DI_KEXTS) \
		,$(NLTAB)$(call NEMU_SIGN_MACHO_FN,$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root/$(kext).kext/Contents/MacOS/$(kext),org.virtualbox.app.kext.$(kext)) )
	$(foreach kext,$(NEMU_DI_KEXTS), \
		$(NLTAB)$(call NEMU_SIGN_BUNDLE_FN,$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root/$(kext).kext,org.virtualbox.app.kext.$(kext)) )
## @TODO check why this fails on the build box:	$(foreach kext,$(NEMU_DI_KEXTS), $(NLTAB)codesign --verify --verbose=1 $(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root/$(kext).kext )
endif
	@# Set the correct owners.
	sudo chown -R root:wheel $(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root/
	@# Do keyword replacement in the package info and description files.
	$(SED) \
		-e 's/@NEMU_VERSION_STRING@/$(NEMU_VERSION_STRING)/g' \
		-e 's/@NEMU_VERSION_MAJOR@/$(NEMU_VERSION_MAJOR)/g' \
		-e 's/@NEMU_VERSION_MINOR@/$(NEMU_VERSION_MINOR)/g' \
		-e 's/@NEMU_VERSION_BUILD@/$(NEMU_VERSION_BUILD)/g' \
		-e 's/@NEMU_VENDOR@/$(NEMU_VENDOR)/g' \
		-e 's/@NEMU_PRODUCT@/$(NEMU_PRODUCT)/g' \
		-e 's/@NEMU_C_YEAR@/$(NEMU_C_YEAR)/g' \
		--output $(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.desc/PkgBuildComponent.plist \
		$(NEMU_PATH_DI_SRC)/NemuKEXTs/PkgBuildComponent.plist
	@# Copy the resources.
	$(INSTALL) -m 0755 $(NEMU_PATH_DI_SRC)/NemuKEXTs/postflight                            $(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.res/
	@# Build the package.
	$(NEMU_PKGBUILD) \
		--root   $(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root/ \
		--component-plist $(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.desc/PkgBuildComponent.plist \
		--script $(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.res \
		--identifier org.virtualbox.pkg.nemukexts \
		--version $(NEMU_VERSION_MAJOR).$(NEMU_VERSION_MINOR).$(NEMU_VERSION_BUILD) \
		--install-location "/Library/Application Support/VirtualBox" \
		--ownership preserve \
		$(if $(NEMU_MACOSX_INSTALLER_SIGN),--sign "$(NEMU_MACOSX_INSTALLER_SIGN)",) \
		$@
	@# Cleanup
	sudo chown -R "$(shell whoami)" \
		$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root
	sudo rm -Rf \
		$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.root \
		$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.desc \
		$(NEMU_PATH_PACK_TMP)/NemuKEXTs.pkg.res


#
# Figure out which languages that we support and construct
# .qm and .lproj lists for these.
#
include $(PATH_ROOT)/src/Nemu/Frontends/VirtualBox/nls/ApprovedLanguages.kmk
NEMU_INSTALL_LANG_FILES := $(foreach f,$(NEMU_APPROVED_GUI_LANGUAGES), VirtualBox_$(f).qm qt_$(f).qm)
NEMU_INSTALL_LANG_LPROJ := $(addsuffix .lproj,$(NEMU_APPROVED_GUI_LANGUAGES))


#
# The VirtualBox Application.
#

NEMU_DI_VBAPP_DYLIBS = \
	$(foreach qtmod, $(NEMU_QT4_MOD_NAMES), Frameworks/$(qtmod).framework/Versions/4/$(qtmod)) \
	MacOS/NemuDD.dylib \
	MacOS/NemuDD2.dylib \
	MacOS/NemuDDU.dylib \
	MacOS/NemuREM.dylib \
	MacOS/NemuRT.dylib \
	$(if $(NEMU_WITH_SHARED_FOLDERS),MacOS/NemuSharedFolders.dylib,) \
	$(if $(NEMU_WITH_SHARED_CLIPBOARD),MacOS/NemuSharedClipboard.dylib,) \
	$(if $(NEMU_WITH_DRAG_AND_DROP),MacOS/NemuDragAndDropSvc.dylib,) \
	$(if $(NEMU_WITH_GUEST_PROPS),MacOS/NemuGuestPropSvc.dylib,) \
	MacOS/NemuHostChannel.dylib \
	MacOS/NemuVMM.dylib \
	MacOS/NemuXPCOM.dylib \
	MacOS/NemuXPCOMC.dylib \
	MacOS/components/NemuC.dylib \
	MacOS/components/NemuSVCM.dylib \
	MacOS/components/NemuXPCOMIPCC.dylib \
	MacOS/NemuAuth.dylib \
	MacOS/NemuAuthSimple.dylib \
	$(if $(NEMU_WITH_GUEST_CONTROL),MacOS/NemuGuestControlSvc.dylib,)
ifneq ($(wildcard $(NEMU_PATH_DIST)/VirtualBox.app/Contents/MacOS/accessible/libqtaccessiblewidgets.dylib),)
 NEMU_DI_VBAPP_DYLIBS += \
	MacOS/accessible/libqtaccessiblewidgets.dylib
endif
if defined(NEMU_WITH_VRDP) && !defined(NEMU_WITH_EXTPACK_PUEL)
 NEMU_DI_VBAPP_DYLIBS += \
	MacOS/NemuVRDP.dylib
endif
ifdef NEMU_WITH_CROGL
 NEMU_DI_VBAPP_DYLIBS += \
 	MacOS/NemuOGLhostcrutil.dylib \
 	MacOS/NemuOGLhosterrorspu.dylib \
 	MacOS/NemuOGLrenderspu.dylib \
 	MacOS/NemuSharedCrOpenGL.dylib

 ifdef NEMU_WITH_CR_DISPLAY_LISTS
  NEMU_DI_VBAPP_DYLIBS += \
 	MacOS/NemuOGLexpandospu.dylib
 endif
endif
ifdef NEMU_WITH_DEBUGGER_GUI
 NEMU_DI_VBAPP_DYLIBS += \
 	MacOS/NemuDbg.dylib \
 	MacOS/DbgPlugInDiggers.dylib
endif
ifdef NEMU_WITH_HARDENING
 NEMU_DI_VBAPP_DYLIBS += \
 	MacOS/VirtualBox.dylib \
 	MacOS/NemuNetDHCP.dylib \
	MacOS/NemuNetNAT.dylib \
 	MacOS/NemuHeadless.dylib
endif
ifdef NEMU_WITH_HDDPARALLELS_INSTALL
 NEMU_DI_VBAPP_DYLIBS += \
 	MacOS/NemuHDDParallels.dylib
endif
if defined(NEMU_WITH_PYTHON) && !defined(NEMU_WITHOUT_NEMUPYTHON_FOR_OSX_10_6)
 NEMU_DI_VBAPP_DYLIBS += \
 	MacOS/NemuPython2_6.so
endif
if defined(NEMU_WITH_PYTHON) && !defined(NEMU_WITHOUT_NEMUPYTHON_FOR_OSX_10_7)
 NEMU_DI_VBAPP_DYLIBS += \
 	MacOS/NemuPython2_7.so
endif
ifdef NEMU_WITH_VMSVGA3D
 NEMU_DI_VBAPP_DYLIBS += \
 	MacOS/NemuSVGA3D.dylib \
 	MacOS/NemuSVGA3DObjC.dylib
endif

NEMU_DI_VBAPP_DYLIBS.x86 := \
	MacOS/NemuREM32.dylib \
	MacOS/NemuREM64.dylib
ifdef NEMU_WITH_PYTHON
 NEMU_DI_VBAPP_DYLIBS.x86 += \
 	MacOS/NemuPython2_5.so \
	$(if-expr defined(NEMU_WITH_MAC_OS_X_10_4_SUPPORT),MacOS/NemuPython2_3.so,)
endif

NEMU_DI_VBAPP_DYLIBS.amd64 :=
if defined(NEMU_WITH_PYTHON) && defined(NEMU_WITHOUT_NEMUPYTHON_FOR_OSX_10_6)
 NEMU_DI_VBAPP_DYLIBS.amd64 += \
 	MacOS/NemuPython2_6.so
endif

if defined(NEMU_WITH_JXPCOM)
 NEMU_DI_VBAPP_DYLIBS += \
        MacOS/libnemujxpcom.jnilib
endif

if1of ($(NEMU_DI_VBAPP_DYLIBS.amd64), $(NEMU_DI_VBAPP_DYLIBS.x86))
 $(error Conflict.$(NLTAB)NEMU_DI_VBAPP_DYLIBS.amd64=$(NEMU_DI_VBAPP_DYLIBS.amd64)$(NLTAB)NEMU_DI_VBAPP_DYLIBS.x86  =$(NEMU_DI_VBAPP_DYLIBS.x86))
endif
if1of ($(NEMU_DI_VBAPP_DYLIBS.amd64) $(NEMU_DI_VBAPP_DYLIBS.x86),$(NEMU_DI_VBAPP_DYLIBS))
 $(error Conflict.$(NLTAB)NEMU_DI_VBAPP_DYLIBS.amd64=$(NEMU_DI_VBAPP_DYLIBS.amd64)$(NLTAB)NEMU_DI_VBAPP_DYLIBS.x86  =$(NEMU_DI_VBAPP_DYLIBS.x86)$(NLTAB)NEMU_DI_VBAPP_DYLIBS=$(NEMU_DI_VBAPP_DYLIBS))
endif

NEMU_DI_VBAPP_PROGS = \
	MacOS/NemuManage \
	MacOS/NemuSVC \
	MacOS/NemuHeadless \
	MacOS/NemuXPCOMIPCD \
	MacOS/NemuNetAdpCtl \
	MacOS/NemuNetDHCP \
	MacOS/NemuNetNAT \
	MacOS/NemuExtPackHelperApp \
	MacOS/NemuBalloonCtrl \
	MacOS/NemuAutostart \
	MacOS/VirtualBoxVM \
	$(if $(NEMU_WITH_WEBSERVICES),MacOS/nemuwebsrv) \
	MacOS/VirtualBox \
	$(if $(NEMU_WITH_DTRACE),MacOS/NemuDTrace,)

NEMU_DI_VBAPP_UNIVERSAL_PROGS = \
	MacOS/vmstarter \
	$(if $(NEMU_WITH_NEMU_IMG)$(NEMU_WITH_TESTCASES),MacOS/nemu-img,)

NEMU_DI_VBAPP_OTHER_UNIVERSAL_BINS = \
	MacOS/NemuVMMR0.r0 \
	MacOS/NemuDDR0.r0 \
	MacOS/NemuDD2R0.r0

ifdef NEMU_WITH_RAW_MODE
 NEMU_DI_VBAPP_OTHER_BINS = \
	MacOS/VMMRC.rc \
	MacOS/NemuDDRC.rc \
	MacOS/NemuDD2RC.rc
else
 NEMU_DI_VBAPP_OTHER_BINS =
endif

NEMU_DI_VBAPP_DUPLICATED_RESOURCE_FILES = \
	Resources/virtualbox.icns \
	Resources/virtualbox.png \
	Resources/virtualbox-nemu.icns \
	Resources/virtualbox-nemu-extpack.icns \
	Resources/virtualbox-ovf.icns \
	Resources/virtualbox-ova.icns \
	Resources/virtualbox-vdi.icns \
	Resources/virtualbox-vmdk.icns \
	Resources/virtualbox-vhd.icns \
	Resources/virtualbox-hdd.icns

NEMU_DI_VBAPP_MISC_FILES = \
	Info.plist \
	PkgInfo \
       $(NEMU_DI_VBAPP_DUPLICATED_RESOURCE_FILES) \
	MacOS/components/NemuXPCOMBase.xpt \
	MacOS/components/VirtualBox_XPCOM.xpt \
	Resources/VirtualBoxVM.app/Contents/Info.plist \
	Resources/VirtualBoxVM.app/Contents/PkgInfo \
       $(addprefix Resources/VirtualBoxVM.app/Contents/,$(NEMU_DI_VBAPP_DUPLICATED_RESOURCE_FILES)) \
	Resources/vmstarter.app/Contents/Info.plist \
	Resources/vmstarter.app/Contents/PkgInfo \
       $(addprefix Resources/vmstarter.app/Contents/,$(NEMU_DI_VBAPP_DUPLICATED_RESOURCE_FILES))
ifdef NEMU_WITH_DOCS_PACKING
NEMU_DI_VBAPP_MISC_FILES += \
	MacOS/UserManual.pdf
endif
ifdef NEMU_WITH_ADDITIONS_PACKING
 ifneq ($(wildcard $(NEMU_PATH_DIST)/VirtualBox.app/Contents/MacOS/NemuGuestAdditions.iso),)
 NEMU_DI_VBAPP_MISC_FILES += \
	MacOS/NemuGuestAdditions.iso
 endif
endif
ifdef NEMU_WITH_EFIFW_PACKING
NEMU_DI_VBAPP_MISC_FILES += \
	MacOS/NemuEFI32.fd \
	MacOS/NemuEFI64.fd
endif
NEMU_DI_VBAPP_MISC_FILES += \
	Frameworks/QtGui$(NEMU_QT4_INFIX).framework/Versions/4/Resources/qt_menu.nib/classes.nib \
	Frameworks/QtGui$(NEMU_QT4_INFIX).framework/Versions/4/Resources/qt_menu.nib/info.nib \
	Frameworks/QtGui$(NEMU_QT4_INFIX).framework/Versions/4/Resources/qt_menu.nib/keyedobjects.nib \
	$(foreach qtmod, $(NEMU_QT4_MOD_NAMES), Frameworks/$(qtmod).framework/Versions/4/Resources/Info.plist)

NEMU_DI_VBAPP_SYMLINKS = \
	Resources/VirtualBoxVM.app/Contents/MacOS=>../../../MacOS/ \
	Resources/vmstarter.app/Contents/MacOS=>../../../MacOS/ \
	$(foreach qtmod, $(NEMU_QT4_MOD_NAMES) \
	,Frameworks/$(qtmod).framework/Versions/Current=>4 )
ifndef NEMU_NOT_OSX_105
NEMU_DI_VBAPP_SYMLINKS += $(foreach qtmod, $(NEMU_QT4_MOD_NAMES) \
	,Frameworks/$(qtmod).framework/$(qtmod)=>Versions/4/$(qtmod) \
	 Frameworks/$(qtmod).framework/Resources=>Versions/4/Resources/ )
endif

ifdef NEMU_WITH_PYTHON
 # Python XPCOM glue
 NEMU_DI_VBAPP_PYTHON_FILES = \
 	$(NEMUINST_SDK_BINDINGS_XPCOM_PYTHON_FILES) \
 	$(NEMUINST_SDK_INSTALLER_PYTHON_FILES)
endif


# (The dependencies are including way too much here because I'm lazy.)
$(NEMU_PATH_PACK_TMP)/Packages/VirtualBox.pkg: \
		$(foreach f,$(NEMU_INSTALLER_ADD_LANGUAGES), \
			$(NEMU_BRAND_$(f)_VIRTUALBOX_DESCRIPTION_PLIST)) \
		$(foreach f, $(NEMU_DI_VBAPP_DYLIBS) $(NEMU_DI_VBAPP_OTHER_UNIVERSAL_BINS) $(NEMU_DI_VBAPP_UNIVERSAL_PROGS) $(NEMU_DI_VBAPP_OTHER_BINS) $(NEMU_DI_VBAPP_PROGS) $(NEMU_DI_VBAPP_MISC_FILES)\
			,$(call NEMU_DI_FN_DEP_BOTH,VirtualBox.app/Contents/$(f)) ) \
		$(foreach f, $(NEMU_DI_VBAPP_DYLIBS.x86) $(NEMU_DI_VBAPP_MISC_FILES.x86)\
			,$(call NEMU_DI_FN_DEP_32,VirtualBox.app/Contents/$(f)) ) \
		$(foreach f, $(NEMU_DI_VBAPP_DYLIBS.amd64) $(NEMU_DI_VBAPP_MISC_FILES.amd64)\
			,$(call NEMU_DI_FN_DEP_64,VirtualBox.app/Contents/$(f)) ) \
		\
		$(if $(NEMU_WITH_DOCS_PACKING),$(NEMU_ADD_MANUALS),) \
		$(NEMU_BRAND_LICENSE_TXT) \
		$(wildcard $(NEMU_PATH_DI_SRC)/VirtualBox/*) \
		$(wildcard $(NEMU_PATH_DI_SRC)/VirtualBox/*.lproj/*) \
		$$(addprefix $(NEMU_PATH_DIST)/VirtualBox.app/Contents/MacOS/nls/,$(NEMU_INSTALL_LANG_FILES)) \
		\
		$$(wildcard $(NEMU_PATH_DIST)/VirtualBox.app/*) \
		$(filter-out Disabled, $(wildcard $(NEMU_PATH_DIST)/VirtualBox.app/Contents/*)) \
		$$(wildcard $(NEMU_PATH_DIST)/VirtualBox.app/Contents/Resources/*) \
		$$(wildcard $(NEMU_PATH_DIST)/VirtualBox.app/Contents/Resources/VirtualBoxVM.app/Contents/*) \
		$$(wildcard $(NEMU_PATH_DIST)/VirtualBox.app/Contents/Resources/VirtualBoxVM.app/Contents/Resources/*) \
		$$(wildcard $(NEMU_PATH_DIST)/VirtualBox.app/Contents/Resources/VirtualBoxVM.app/Contents/Resources/*.lproj/*) \
		$$(wildcard $(NEMU_PATH_DIST)/VirtualBox.app/Contents/Resources/vmstarter.app/Contents/*) \
		$$(wildcard $(NEMU_PATH_DIST)/VirtualBox.app/Contents/Resources/vmstarter.app/Contents/Resources/*) \
		$$(wildcard $(NEMU_PATH_DIST)/VirtualBox.app/Contents/Resources/vmstarter.app/Contents/Resources/*.lproj/*) \
		$$(wildcard $(NEMU_PATH_DIST)/VirtualBox.app/Contents/Resources/*.lproj/*) \
		$$(wildcard $(NEMU_PATH_DIST)/VirtualBox.app/Contents/MacOS/*) \
		$$(wildcard $(NEMU_PATH_DIST)/VirtualBox.app/Contents/MacOS/additions/*) \
		$$(wildcard $(NEMU_PATH_DIST)/VirtualBox.app/Contents/MacOS/components/*) \
		$$(wildcard $(NEMU_PATH_DIST)/VirtualBox.app/Contents/MacOS/accessible/*) \
		$(if-expr defined(NEMU_WITH_PYTHON), $(addprefix $(NEMU_PATH_DIST)/, $(NEMU_DI_VBAPP_PYTHON_FILES)),) \
                $(if-expr defined(NEMU_WITH_JXPCOM), $(addprefix $(NEMU_PATH_DIST)/, sdk/bindings/xpcom/java/nemujxpcom.jar),) \
		$(if $(NEMU_WITH_WEBSERVICES),$(NEMU_PATH_DI_SRC)/VirtualBox/org.virtualbox.nemuwebsrv.plist,) \
		$(NEMU_PATH_DI_SRC)/VirtualBox/org.virtualbox.nemuballoonctrl.plist \
		$(NEMU_PATH_DI_SRC)/VirtualBox/org.virtualbox.nemuautostart.plist \
		$(NEMU_PATH_DI_SRC)/VirtualBox/NemuAutostartDarwin.sh \
               $(if-expr defined(NEMU_WITH_DTRACE), \
                $(foreach f, $(NEMUINST_DTRACE_LIB_ARCH_FILES), \
		 	$(call NEMU_DI_FN_DEP_32,VirtualBox.app/Contents/MacOS/dtrace/lib/x86/$f) \
		 	$(call NEMU_DI_FN_DEP_64,VirtualBox.app/Contents/MacOS/dtrace/lib/amd64/$f)) \
                $(foreach f, $(NEMUINST_DTRACE_TESTCASE_ARCH_FILES), \
		 	$(call NEMU_DI_FN_DEP_32,VirtualBox.app/Contents/MacOS/dtrace/testcase/x86/$f) \
		 	$(call NEMU_DI_FN_DEP_64,VirtualBox.app/Contents/MacOS/dtrace/testcase/amd64/$f)) \
                $(addprefix $(NEMU_PATH_DIST)/VirtualBox.app/Contents/MacOS/dtrace/scripts/,$(NEMUINST_DTRACE_SCRIPTS_FILES)) \
		 ,) \
		$(NEMU_DARWIN_INST_DEP_ON_MAKEFILE)
	$(call MSG_TOOL,pkgbuild,,,$@)
	@# Cleanup any previously failed attempts.
	sudo rm -Rf \
		$@ \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.root \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.desc \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.res
	@# Correct directory permissions are important.
	$(MKDIR) -p \
		$(@D) \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.desc \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.res \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.res/English.lproj
	$(MKDIR) -p -m 0775 \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.root/Applications
	$(MKDIR) -p -m 0755 $(sort \
		$(NEMU_PATH_NEMU_APP_TMP)/Contents \
		$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS \
		$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/components \
		$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/nls \
		$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/accessible \
		$(NEMU_PATH_NEMU_APP_TMP)/Contents/Resources \
		$(NEMU_PATH_NEMU_APP_TMP)/Contents/Resources/VirtualBoxVM.app \
		$(NEMU_PATH_NEMU_APP_TMP)/Contents/Resources/VirtualBoxVM.app/Contents \
		$(NEMU_PATH_NEMU_APP_TMP)/Contents/Resources/vmstarter.app \
		$(NEMU_PATH_NEMU_APP_TMP)/Contents/Resources/vmstarter.app/Contents \
		$(if-expr defined(NEMU_WITH_PYTHON), \
			$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/sdk \
			$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/sdk/installer \
			$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/sdk/installer/nemuapi \
			$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/sdk/bindings/ \
			$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/sdk/bindings/xpcom \
			$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/sdk/bindings/xpcom/python \
			$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/sdk/bindings/xpcom/python/xpcom \
			$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/sdk/bindings/xpcom/python/xpcom/client \
			$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/sdk/bindings/xpcom/python/xpcom/server,) \
                $(if-expr defined(NEMU_WITH_JXPCOM), \
                        $(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/sdk/bindings/xpcom/java,) \
		$(addprefix $(NEMU_PATH_NEMU_APP_TMP)/Contents/,$(dir \
			$(NEMU_DI_VBAPP_DYLIBS) \
			$(NEMU_DI_VBAPP_OTHER_UNIVERSAL_BINS) \
			$(NEMU_DI_VBAPP_UNIVERSAL_PROGS) \
			$(NEMU_DI_VBAPP_OTHER_BINS) \
			$(NEMU_DI_VBAPP_PROGS) \
			$(NEMU_DI_VBAPP_MISC_FILES) \
			$(NEMU_DI_VBAPP_DYLIBS.$(KBUILD_TARGET_ARCH)) \
			$(NEMU_DI_VBAPP_MISC_FILES.$(KBUILD_TARGET_ARCH)) \
			))\
		)
# Create the .lproj language directories
	$(MKDIR) -p -m 0755 \
		$(addprefix $(NEMU_PATH_NEMU_APP_TMP)/Contents/Resources/,$(NEMU_INSTALL_LANG_LPROJ))
# Install all supported language files
	$(foreach f, $(NEMU_INSTALL_LANG_FILES) \
		,$(INSTALL) -m 0644 $(NEMU_PATH_DIST)/VirtualBox.app/Contents/MacOS/nls/$(f)    $(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/nls/$(f)$(NLTAB))
ifdef NEMU_WITH_WEBSERVICES
	$(INSTALL) -m 0644 $(NEMU_PATH_DI_SRC)/VirtualBox/org.virtualbox.nemuwebsrv.plist       $(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/
endif
	$(INSTALL) -m 0644 $(NEMU_PATH_DI_SRC)/VirtualBox/org.virtualbox.nemuballoonctrl.plist  $(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/
	$(INSTALL) -m 0644 $(NEMU_PATH_DI_SRC)/VirtualBox/org.virtualbox.nemuautostart.plist    $(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/
	$(INSTALL) -m 0755 $(NEMU_PATH_DI_SRC)/VirtualBox/NemuAutostartDarwin.sh                $(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/
# Install the python bridge stuff
ifdef NEMU_WITH_PYTHON
	$(foreach f,$(NEMU_DI_VBAPP_PYTHON_FILES) \
		,$(INSTALL) -m 0644 $(NEMU_PATH_DIST)/$(f)                                      $(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/$(f)$(NLTAB) )
	$(INSTALL) -m 0755 $(PATH_ROOT)/src/Nemu/Frontends/NemuShell/nemushell.py               $(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS
endif
# Install the java bridge stuff
ifdef NEMU_WITH_JXPCOM
	$(INSTALL) -m 0755 $(NEMU_PATH_DIST)/sdk/bindings/xpcom/java/nemujxpcom.jar             $(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/sdk/bindings/xpcom/java/nemujxpcom.jar
endif
# Copy misc files.
	$(foreach f,$(NEMU_DI_VBAPP_MISC_FILES) \
		,$(INSTALL) -m 0644 $(NEMU_PATH_DIST)/VirtualBox.app/Contents/$(f)              $(NEMU_PATH_NEMU_APP_TMP)/Contents/$(f)$(NLTAB) )
	$(INSTALL) -m 644 $(NEMU_BRAND_LICENSE_TXT)                                             $(NEMU_PATH_NEMU_APP_TMP)/Contents/Resources/LICENSE
ifdef NEMU_WITH_DOCS_PACKING
	$(foreach f,$(NEMU_ADD_MANUALS) \
		,$(INSTALL) -m 0644 $(f) $(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/$(NLTAB))
endif
	@# Create symlinks.
	$(foreach symlink,$(NEMU_DI_VBAPP_SYMLINKS) $(NEMU_DI_VBAPP_SYMLINKS.$(KBUILD_TARGET_ARCH)) \
		,$(LN) -s $(word 2,$(subst =>, ,$(symlink)))                                    $(NEMU_PATH_NEMU_APP_TMP)/Contents/$(word 1,$(subst =>, ,$(symlink)))$(NLTAB))
	@# Copy the dylibs.
	$(foreach dylib, $(NEMU_DI_VBAPP_DYLIBS) $(NEMU_DI_VBAPP_DYLIBS.$(KBUILD_TARGET_ARCH)) \
		,$(INSTALL) -m 0644 $(NEMU_PATH_DIST)/VirtualBox.app/Contents/$(dylib)          $(NEMU_PATH_NEMU_APP_TMP)/Contents/$(dylib)$(NLTAB))
	@# Copy the other binaries.
	$(foreach otherbin, $(NEMU_DI_VBAPP_OTHER_UNIVERSAL_BINS) $(NEMU_DI_VBAPP_OTHER_BINS) \
		,$(INSTALL) -m 0644 $(NEMU_PATH_DIST)/VirtualBox.app/Contents/$(otherbin)       $(NEMU_PATH_NEMU_APP_TMP)/Contents/$(otherbin)$(NLTAB))
	@# Create/copy the universal executable binaries.
	$(foreach otherbin, $(NEMU_DI_VBAPP_UNIVERSAL_PROGS) \
		,$(INSTALL) -m 0755 $(NEMU_PATH_DIST)/VirtualBox.app/Contents/$(otherbin)       $(NEMU_PATH_NEMU_APP_TMP)/Contents/$(otherbin)$(NLTAB))
	@# Copy the binaries.
	$(foreach prog, $(NEMU_DI_VBAPP_PROGS) \
		,$(INSTALL) -m 0755 $(NEMU_PATH_DIST)/VirtualBox.app/Contents/$(prog)       	$(NEMU_PATH_NEMU_APP_TMP)/Contents/$(prog)$(NLTAB))
#ifdef NEMU_WITH_HARDENING - disabled temporarily
if 1
	@# We cannot use @executable_path together with setuid binaries, dyld gets upset about it. So, fix Qt libs and users.
	$(foreach qtmod, $(NEMU_QT4_MOD_NAMES) \
		,install_name_tool -id /Applications/VirtualBox.app/Contents/Frameworks/$(qtmod).framework/Versions/4/$(qtmod) \
			$(NEMU_PATH_NEMU_APP_TMP)/Contents/Frameworks/$(qtmod).framework/Versions/4/$(qtmod)$(NLTAB) )
	$(foreach f, \
		$(NEMU_DI_VBAPP_DYLIBS) \
		$(NEMU_DI_VBAPP_DYLIBS.$(KBUILD_TARGET_ARCH)) \
		$(NEMU_DI_VBAPP_PROGS) \
		,install_name_tool \
			$(foreach qtmod, $(NEMU_QT4_MOD_NAMES), \
				-change           @executable_path/../Frameworks/$(qtmod).framework/Versions/4/$(qtmod) \
				/Applications/VirtualBox.app/Contents/Frameworks/$(qtmod).framework/Versions/4/$(qtmod) \
				-change              $(NEMU_PATH_QT4)/Frameworks/$(qtmod).framework/Versions/4/$(qtmod) \
				/Applications/VirtualBox.app/Contents/Frameworks/$(qtmod).framework/Versions/4/$(qtmod) \
				-change                          $(PATH_SDK_QT4)/$(qtmod).framework/Versions/4/$(qtmod) \
				/Applications/VirtualBox.app/Contents/Frameworks/$(qtmod).framework/Versions/4/$(qtmod) \
				-change                                          $(qtmod).framework/Versions/4/$(qtmod) \
				/Applications/VirtualBox.app/Contents/Frameworks/$(qtmod).framework/Versions/4/$(qtmod) \
				) \
			$(NEMU_PATH_NEMU_APP_TMP)/Contents/$(f)$(NLTAB) )
endif
ifdef NEMU_WITH_DTRACE
	@# DTrace library, testcases and scripts.
	$(MKDIR) -p -m 0755 -- \
		$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/dtrace/lib/$(KBUILD_TARGET_ARCH)/ \
		$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/dtrace/testcase/$(KBUILD_TARGET_ARCH)/ \
		$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/dtrace/scripts/
	$(foreach file, $(addprefix lib/$(KBUILD_TARGET_ARCH)/,$(NEMUINST_DTRACE_LIB_ARCH_FILES)) \
			$(addprefix testcase/$(KBUILD_TARGET_ARCH)/,$(NEMUINST_DTRACE_TESTCASE_ARCH_FILES)) \
       		$(addprefix scripts/,$(NEMUINST_DTRACE_SCRIPTS_FILES)) \
		,$(INSTALL) -m 0655 $(NEMU_PATH_DIST)/VirtualBox.app/Contents/MacOS/dtrace/$(file) \
			$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/dtrace/$(file)$(NLTAB))
endif

	@# Signed the binaries and the application bundle.
ifdef NEMU_SIGNING_MODE
	$(foreach qtmod, $(NEMU_QT4_MOD_NAMES) \
		,$(NLTAB)$(call NEMU_SIGN_MACHO_FN,$(NEMU_PATH_NEMU_APP_TMP)/Contents/Frameworks/$(qtmod).framework/Versions/4/$(qtmod),org.virtualbox.app.frameworks.$(qtmod)) )
	$(foreach qtmod, $(NEMU_QT4_MOD_NAMES) \
		,$(NLTAB)$(call NEMU_SIGN_BUNDLE_FN,$(NEMU_PATH_NEMU_APP_TMP)/Contents/Frameworks/$(qtmod).framework/Versions/4,org.virtualbox.app.frameworks.$(qtmod)) )
	$(foreach dylib, \
		$(NEMU_DI_VBAPP_DYLIBS) \
		$(NEMU_DI_VBAPP_DYLIBS.$(KBUILD_TARGET_ARCH)) \
		, $(NLTAB)$(call NEMU_SIGN_MACHO_FN,$(NEMU_PATH_NEMU_APP_TMP)/Contents/$(dylib),org.virtualbox.app.macos.$(notdir $(dylib))) )
	$(foreach bin, $(NEMU_DI_VBAPP_UNIVERSAL_PROGS) \
		, $(NLTAB)$(call NEMU_SIGN_MACHO_FN,$(NEMU_PATH_NEMU_APP_TMP)/Contents/$(bin),org.virtualbox.app.macos.$(notdir $(bin))) )
 ifdef NEMU_NOT_OSX_105 ## @todo Move as much stuff out of MacOS/ as possible!!
	$(foreach other, $(NEMU_DI_VBAPP_OTHER_UNIVERSAL_BINS) $(NEMU_DI_VBAPP_OTHER_BINS)\
		, $(NLTAB)$(call NEMU_SIGN_MACHO_FN,$(NEMU_PATH_NEMU_APP_TMP)/Contents/$(other),org.virtualbox.app.macos.$(notdir $(other))) )
	$(foreach bin, $(filter-out MacOS/VirtualBox,$(NEMU_DI_VBAPP_PROGS)) \
		, $(NLTAB)$(call NEMU_SIGN_MACHO_FN,$(NEMU_PATH_NEMU_APP_TMP)/Contents/$(bin),org.virtualbox.app.macos.$(notdir $(bin))) )
	$(foreach file, $(if-expr defined(NEMU_WITH_WEBSERVICES),MacOS/org.virtualbox.nemuwebsrv.plist,) \
			MacOS/org.virtualbox.nemuballoonctrl.plist \
			MacOS/org.virtualbox.nemuautostart.plist \
			MacOS/NemuAutostartDarwin.sh \
			$(if-expr defined(NEMU_WITH_PYTHON),$(addprefix MacOS/, $(NEMU_DI_VBAPP_PYTHON_FILES) nemushell.py),) \
			$(if-expr defined(NEMU_WITH_JXPCOM),MacOS/sdk/bindings/xpcom/java/nemujxpcom.jar,) \
			$(filter MacOS/%,$(NEMU_DI_VBAPP_MISC_FILES)) \
                       $(if-expr defined(NEMU_WITH_DOCS_PACKING),$(addprefix MacOS/,$(NEMU_ADD_MANUALS)),) \
                       $(if-expr defined(NEMU_WITH_DTRACE),\
				$(addprefix MacOS/dtrace/lib/$(KBUILD_TARGET_ARCH)/,$(NEMUINST_DTRACE_LIB_ARCH_FILES)) \
				$(addprefix MacOS/dtrace/testcase/$(KBUILD_TARGET_ARCH)/,$(NEMUINST_DTRACE_TESTCASE_ARCH_FILES)) \
       			$(addprefix MacOS/dtrace/scripts/,$(NEMUINST_DTRACE_SCRIPTS_FILES)) ,) \
			$(addprefix MacOS/nls/,$(NEMU_INSTALL_LANG_FILES)) \
		, $(NLTAB)$(call NEMU_SIGN_FILE_FN,$(NEMU_PATH_NEMU_APP_TMP)/Contents/$(file),org.virtualbox.app.$(tolower $(subst $(SP),,$(subst /,.,$(file))))) )

	$(call NEMU_SIGN_BUNDLE_FN,$(NEMU_PATH_NEMU_APP_TMP)/Contents/Resources/VirtualBoxVM.app,,)
	$(call NEMU_SIGN_BUNDLE_FN,$(NEMU_PATH_NEMU_APP_TMP)/Contents/Resources/vmstarter.app,,)
	$(call NEMU_SIGN_BUNDLE_FN,$(NEMU_PATH_NEMU_APP_TMP),,--deep)
 else
	$(foreach other, $(NEMU_DI_VBAPP_OTHER_UNIVERSAL_BINS) $(NEMU_DI_VBAPP_OTHER_BINS) \
		, $(NLTAB)$(call NEMU_SIGN_VMM_MOD_FN,$(NEMU_PATH_NEMU_APP_TMP)/Contents/$(other),org.virtualbox.app.macos.$(notdir $(other))) )
	$(foreach bin, $(NEMU_DI_VBAPP_PROGS) \
		, $(NLTAB)$(call NEMU_SIGN_MACHO_FN,$(NEMU_PATH_NEMU_APP_TMP)/Contents/$(bin),org.virtualbox.app.macos.$(notdir $(bin))) )
 endif
endif
	@# Set the correct owner and set the set-user-ID-on-execution bit on the relevant executables.
	sudo chown -R root:admin $(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.root
	sudo chmod u+s $(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/NemuNetAdpCtl
ifdef NEMU_WITH_HARDENING
	sudo chmod u+s \
		$(foreach bin,NemuHeadless VirtualBox VirtualBoxVM NemuNetDHCP NemuNetNAT,\
			$(NEMU_PATH_NEMU_APP_TMP)/Contents/MacOS/$(bin))
endif
	@# Do keyword replacement in the package info and description files.
	$(SED) \
		-e 's/@NEMU_VERSION_STRING@/$(NEMU_VERSION_STRING)/g' \
		-e 's/@NEMU_VERSION_MAJOR@/$(NEMU_VERSION_MAJOR)/g' \
		-e 's/@NEMU_VERSION_MINOR@/$(NEMU_VERSION_MINOR)/g' \
		-e 's/@NEMU_VERSION_BUILD@/$(NEMU_VERSION_BUILD)/g' \
		-e 's/@NEMU_VENDOR@/$(NEMU_VENDOR)/g' \
		-e 's/@NEMU_PRODUCT@/$(NEMU_PRODUCT)/g' \
		-e 's/@NEMU_C_YEAR@/$(NEMU_C_YEAR)/g' \
		--output $(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.desc/PkgBuildComponent.plist \
		$(NEMU_PATH_DI_SRC)/VirtualBox/PkgBuildComponent.plist
	@# Copy the resources.
	$(INSTALL) -m 0755 $(NEMU_PATH_DI_SRC)/VirtualBox/preflight                         $(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.res/
ifdef NEMU_WITH_HARDENING
	$(INSTALL) -m 0755 $(NEMU_PATH_DI_SRC)/VirtualBox/postflight                        $(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.res/
else
	$(SED) -s '/WITH_HARDENING/d' -o $(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.res/postflight $(NEMU_PATH_DI_SRC)/VirtualBox/postflight
	$(CHMOD) 0755 $(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.res/postflight
endif
	@# Build the package.
	$(NEMU_PKGBUILD) \
       	--root   $(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.root/Applications/ \
		--component-plist $(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.desc/PkgBuildComponent.plist \
		--script $(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.res \
		--identifier org.virtualbox.pkg.virtualbox \
		--version $(NEMU_VERSION_MAJOR).$(NEMU_VERSION_MINOR).$(NEMU_VERSION_BUILD) \
		--install-location /Applications/ \
		--ownership preserve \
		$(if-expr defined(NEMU_NOT_OSX_105),--preserve-xattr,) \
		$(if $(NEMU_MACOSX_INSTALLER_SIGN),--sign "$(NEMU_MACOSX_INSTALLER_SIGN)",) \
		$@
	@# Cleanup
	sudo chown -R "$(shell whoami)" \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.root
	sudo chmod -R a-s \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.root
	sudo rm -Rf \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.root \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.desc \
		$(NEMU_PATH_PACK_TMP)/VirtualBox.pkg.res

#
# The VirtualBox CLI wrapper scripts.
#
$(NEMU_PATH_PACK_TMP)/Packages/VirtualBoxCLI.pkg: \
		$$(wildcard $(NEMU_PATH_DI_SRC)/VirtualBoxCLI/* \
		            $(NEMU_PATH_DI_SRC)/VirtualBoxCLI/*.lproj/*) \
		$(foreach f,$(NEMU_INSTALLER_ADD_LANGUAGES) \
			,$(NEMU_BRAND_$(f)_VIRTUALBOXCLI_DESCRIPTION_PLIST)) \
		$(NEMU_DARWIN_INST_DEP_ON_MAKEFILE)
	$(call MSG_TOOL,pkgbuild,,,$@)
	@# Cleanup any previously failed attempts.
	sudo rm -Rf \
		$@ \
		$(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root \
		$(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.desc \
		$(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.res
	@# Correct directory permissions are important.
	$(MKDIR) -p \
		$(@D) \
		$(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.desc \
		$(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.res \
		$(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.res/English.lproj
	$(MKDIR) -p -m 0755 \
		$(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root/usr \
		$(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root/usr/local/bin
	@# Generate the wrapper scripts.
	$(APPEND) -tn  $(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root/usr/local/bin/VirtualBox \
		'#!/bin/bash' 'exec /Applications/VirtualBox.app/Contents/MacOS/VirtualBox "$$@"'
	$(APPEND) -tn  $(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root/usr/local/bin/NemuManage \
		'#!/bin/bash' 'exec /Applications/VirtualBox.app/Contents/MacOS/NemuManage "$$@"'
	$(APPEND) -tn $(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root/usr/local/bin/NemuVRDP \
		'#!/bin/bash' 'exec /Applications/VirtualBox.app/Contents/MacOS/NemuHeadless "$$@"'
	$(APPEND) -tn $(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root/usr/local/bin/NemuHeadless \
		'#!/bin/bash' 'exec /Applications/VirtualBox.app/Contents/MacOS/NemuHeadless "$$@"'
ifdef NEMU_WITH_WEBSERVICES
	$(APPEND) -tn $(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root/usr/local/bin/nemuwebsrv \
		'#!/bin/bash' 'exec /Applications/VirtualBox.app/Contents/MacOS/nemuwebsrv "$$@"'
endif
if defined(NEMU_WITH_NEMU_IMG) || defined(NEMU_WITH_TESTCASES)
	$(APPEND) -tn $(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root/usr/local/bin/nemu-img \
		'#!/bin/bash' 'exec /Applications/VirtualBox.app/Contents/MacOS/nemu-img "$$@"'
endif
	$(APPEND) -tn $(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root/usr/local/bin/NemuBalloonCtrl \
		'#!/bin/bash' 'exec /Applications/VirtualBox.app/Contents/MacOS/NemuBalloonCtrl "$$@"'
	$(APPEND) -tn $(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root/usr/local/bin/NemuAutostart \
		'#!/bin/bash' 'exec /Applications/VirtualBox.app/Contents/MacOS/NemuAutostart "$$@"'
ifdef NEMU_WITH_DTRACE
	$(APPEND) -tn $(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root/usr/local/bin/NemuDTrace \
		'#!/bin/bash' 'exec /Applications/VirtualBox.app/Contents/MacOS/NemuDTrace "$$@"'
endif
	@# Set the correct owners and file permissions.
	sudo chmod 0755 $(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root/usr/local/bin/*
	sudo chown    root:admin $(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root
	sudo chown -R root:wheel $(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root/usr
	@# Build the package.
	$(NEMU_PKGBUILD) \
       	--root   $(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root/usr/local/bin \
		--identifier org.virtualbox.pkg.virtualboxcli \
		--version $(NEMU_VERSION_MAJOR).$(NEMU_VERSION_MINOR).$(NEMU_VERSION_BUILD) \
		--install-location /usr/local/bin \
		--ownership preserve \
		$(if $(NEMU_MACOSX_INSTALLER_SIGN),--sign "$(NEMU_MACOSX_INSTALLER_SIGN)",) \
		$@
	@# Cleanup
	sudo chown -R "$(shell whoami)" \
		$(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root
	sudo rm -Rf \
		$(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.root \
		$(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.desc \
		$(NEMU_PATH_PACK_TMP)/VirtualBoxCLI.pkg.res


#
# Aliases.
#
NemuKEXTs.pkg:        $(NEMU_PATH_PACK_TMP)/Packages/NemuKEXTs.pkg
VirtualBoxCLI.pkg:    $(NEMU_PATH_PACK_TMP)/Packages/VirtualBoxCLI.pkg
VirtualBox.pkg:       $(NEMU_PATH_PACK_TMP)/Packages/VirtualBox.pkg
VirtualBox.mpkg:      $(NEMU_PATH_PACK_TMP)/DiskImage/VirtualBox.pkg
VirtualBox.dmg:       $(NEMU_PATH_DIST)/VirtualBox-$(NEMU_VERSION_MAJOR).$(NEMU_VERSION_MINOR).$(NEMU_VERSION_BUILD)-r$(NEMU_SVN_REV).dmg
