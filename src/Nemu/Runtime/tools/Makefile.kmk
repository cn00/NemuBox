# $Id: Makefile.kmk $
## @file
# Sub-Makefile for the IPRT tools.
#

#
# Copyright (C) 2006-2015 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#
# The contents of this file may alternatively be used under the terms
# of the Common Development and Distribution License Version 1.0
# (CDDL) only, as it comes in the "COPYING.CDDL" file of the
# VirtualBox OSE distribution, in which case the provisions of the
# CDDL are applicable instead of those of the GPL.
#
# You may elect to license modified versions of this file under the
# terms and conditions of either the GPL or the CDDL or both.
#

SUB_DEPTH = ../../../..
include $(KBUILD_PATH)/subheader.kmk


# RTManifest is a tool for creating and verifying manifest files - build version.
BLDPROGS += bldRTManifest
bldRTManifest_TEMPLATE = NemuAdvBldProg
bldRTManifest_SOURCES  = RTManifest.cpp

# RTSignTool - Signing utility - build version.  Signed on windows so we can get the certificate from it.
BLDPROGS += bldRTSignTool
bldRTSignTool_TEMPLATE = NemuAdvBldProg
bldRTSignTool_SOURCES = RTSignTool.cpp
bldRTSignTool_DEFS = IPRT_IN_BUILD_TOOL
bldRTSignTool_POST_CMDS.win = $(NEMU_SIGN_IMAGE_CMDS)

if !defined(NEMU_ONLY_EXTPACKS_USE_IMPLIBS) && !defined(NEMU_ONLY_VALIDATIONKIT)

 # RTManifest is a tool for creating and verifying manifest files.
 PROGRAMS += RTRm
 RTRm_TEMPLATE = NemuR3Tool
 RTRm_SOURCES = RTRm.cpp

 # RTManifest is a tool for creating and verifying manifest files.
 PROGRAMS += RTManifest
 RTManifest_TEMPLATE = NemuR3Tool
 RTManifest_SOURCES = RTManifest.cpp

 # RTLdrFlt is similar to c++filt, except that it's for NemuVMMR0.r0 stacks.
 PROGRAMS += RTLdrFlt
 RTLdrFlt_TEMPLATE = NemuR3Tool
 RTLdrFlt_SOURCES = RTLdrFlt.cpp

 # RTGzip - our gzip clone (for testing the gzip/gunzip streaming code)
 PROGRAMS += RTGzip
 RTGzip_TEMPLATE = NemuR3Tool
 RTGzip_SOURCES = RTGzip.cpp

 ifdef NEMU_WITH_LIBCURL
 # RTHttp - our http/https fetcher (for testing the http client API).
 PROGRAMS += RTHttp
 RTHttp_TEMPLATE = NemuR3Tool
 RTHttp_SOURCES = RTHttp.cpp
 endif

 # RTShutdown - similar (but not identical) to a typical unix shutdown command.
 PROGRAMS += RTShutdown
 RTShutdown_TEMPLATE = NemuR3Tool
 RTShutdown_SOURCES = RTShutdown.cpp

 # RTTar - our tar clone (for testing the tar/gzip/gunzip streaming code)
 PROGRAMS += RTTar
 RTTar_TEMPLATE = NemuR3Tool
 RTTar_SOURCES = RTTar.cpp

 # RTUnzip - our unzip clone (for testing the unzip streaming code)
 PROGRAMS += RTUnzip
 RTUnzip_TEMPLATE = NemuR3Tool
 RTUnzip_SOURCES = RTUnzip.cpp

 # RTNtDbgHelp - our tar clone (for testing the tar/gzip/gunzip streaming code)
 PROGRAMS.win += RTNtDbgHelp
 RTNtDbgHelp_TEMPLATE = NemuR3Tool
 RTNtDbgHelp_SOURCES = RTNtDbgHelp.cpp

 # RTDbgSymCache - Symbol cache manager.
 PROGRAMS += RTDbgSymCache
 RTDbgSymCache_TEMPLATE = NemuR3Tool
 RTDbgSymCache_SOURCES = RTDbgSymCache.cpp

 # RTSignTool - Signing utility.
 PROGRAMS += RTSignTool
 RTSignTool_TEMPLATE = NemuR3Tool
 RTSignTool_SOURCES = RTSignTool.cpp
 RTSignTool_LIBS = $(PATH_STAGE_LIB)/SUPR3$(NEMU_SUFF_LIB)

endif # !NEMU_ONLY_EXTPACKS_USE_IMPLIBS

include $(FILE_KBUILD_SUB_FOOTER)

