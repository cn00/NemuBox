# $Id: Makefile.kmk $
## @file
# Makefile for the FreeBSD installer.
#

#
# Copyright (C) 2006-2015 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

SUB_DEPTH = ../../../..
include $(KBUILD_PATH)/subheader.kmk

ifneq ($(KBUILD_HOST),freebsd)
 $(error "The FreeBSD installer can only be built on FreeBSD!")
endif

#
# Globals and targets.
#
NEMU_PATH_FBSD_INST_SRC      := $(PATH_SUB_CURRENT)
NEMU_FBSD_INST_OUT_DIR       := $(PATH_TARGET)/Installer/freebsd
NEMU_FBSD_INST_STAGE_DIR     := $(PATH_TARGET)/Installer/freebsd/install
NEMU_FBSD_DBG_PATH           := usr/lib/debug/opt/VirtualBox
NEMU_FBSD_PACKAGE_NAME        = VirtualBox-$(NEMU_VERSION_STRING)-r$(NEMU_SVN_REV).tbz
NEMU_FBSD_INST_LIB_DIR       := $(NEMU_FBSD_INST_STAGE_DIR)/lib
NEMU_FBSD_INST_BIN_DIR       := $(NEMU_FBSD_INST_STAGE_DIR)/bin
NEMU_FBSD_INST_LIBNEMU_DIR   := $(NEMU_FBSD_INST_LIB_DIR)/virtualbox
NEMU_FBSD_INST_SHARE_DIR     := $(NEMU_FBSD_INST_STAGE_DIR)/share
NEMU_FBSD_INST_SHAREAPP_DIR  := $(NEMU_FBSD_INST_SHARE_DIR)/applications
NEMU_FBSD_INST_SHAREICON_DIR := $(NEMU_FBSD_INST_SHARE_DIR)/pixmaps
NEMU_FBSD_INST_SHARENEMU_DIR := $(NEMU_FBSD_INST_SHARE_DIR)/virtualbox

# Unset this to speed up things during makefile hacking.
NEMU_FBSD_INST_DEP_ON_MAKEFILE := $(MAKEFILE_CURRENT)

BLDDIRS  += $(NEMU_FBSD_INST_OUT_DIR) $(NEMU_FBSD_INST_STAGE_DIR)
PACKING  += $(PATH_STAGE_BIN)/$(NEMU_FBSD_PACKAGE_NAME)

OTHER_CLEAN   += \
	$(addprefix $(NEMU_FBSD_INST_STAGE_DIR)/,\
		pkg_plist \
		LICENSE) \
	$(wildcard $(NEMU_FBSD_INST_OUT_DIR)/VirtualBox-*)

#
# FreeBSD installs.
#
INSTALLS += freebsd-misc
freebsd-misc_INST = bin/
freebsd-misc_MODE = a+r,u+w
freebsd-misc_SOURCES = \
	$(PATH_ROOT)/src/Nemu/Frontends/VirtualBox/images/$(if $(NEMU_OSE),OSE,NonOSE)/VirtualBox_32px.png=>Nemu.png \
	$(if $(NEMU_OSE),,$(NEMU_BRAND_LICENSE_TXT)=>LICENSE) \
	$(if $(NEMU_WITH_QTGUI),$(freebsd-misc_0_OUTDIR)/virtualbox.desktop,)
freebsd-misc_CLEAN = $(freebsd-misc_0_OUTDIR)/virtualbox.desktop

$$(PATH_freebsd-misc)/virtualbox.desktop: $(PATH_SUB_CURRENT)/virtualbox.desktop $(NEMU_VERSION_STAMP) | $$(dir $$@)
	$(call MSG_GENERATE,,$@,$<)
ifdef NEMU_PATH_PACKAGE_DOCS
	$(QUIET)$(SED) -e "s+\$$NEMU_DOC_PATH+$(NEMU_PATH_PACKAGE_DOCS)+" --output $@ $<
else
	$(QUIET)$(SED) -e "s+\$$NEMU_DOC_PATH+/opt/VirtualBox+" --output $@ $<
endif



#
# The files residing in bin/ that we'll ship.
#

# Strip these binaries
NEMU_FBSD_STRIP_BIN = \
	NemuDD.so \
	NemuDD2.so \
	NemuREM.so \
	NemuDDU.so \
	NemuVMM.so \
	$(if $(eq $(KBUILD_TARGET_ARCH),x86),NemuREM32.so,) \
	$(if $(eq $(KBUILD_TARGET_ARCH),x86),NemuREM64.so,) \
	NemuRT.so \
	$(if $(NEMU_WITH_NEMUSDL),NemuSDL $(if $(NEMU_WITH_HARDENING),NemuSDL.so),) \
	$(if $(NEMU_WITH_SHARED_CLIPBOARD), NemuSharedClipboard.so,) \
	$(if $(NEMU_WITH_SHARED_FOLDERS), NemuSharedFolders.so,) \
	$(if $(NEMU_WITH_GUEST_PROPS),NemuGuestPropSvc.so,) \
	$(if $(NEMU_WITH_GUEST_CONTROL),NemuGuestControlSvc.so,) \
	NemuHostChannel.so \
	$(if $(NEMU_WITH_MAIN), \
		NemuManage \
		NemuNetDHCP $(if $(NEMU_WITH_HARDENING),NemuNetDHCP.so,) \
		NemuNetAdpCtl \
		NemuSVC \
		NemuXPCOM.so \
		NemuXPCOMC.so \
		NemuXPCOMIPCD \
		components/NemuXPCOMIPCC.so \
		components/NemuSVCM.so \
		components/NemuC.so,) \
	$(if $(NEMU_WITH_CROGL),\
		NemuOGLhostcrutil.so \
		NemuOGLhosterrorspu.so \
		NemuOGLrenderspu.so \
		NemuTestOGL \
		NemuSharedCrOpenGL.so,) \
	$(if $(NEMU_WITH_PYTHON),NemuPython.so,) \
	$(if $(NEMU_WITH_DTRACE),NemuDTrace,)

# Do not remove relocation information of these binaries
NEMU_FBSD_STRIP_OBJ = \
	NemuDD2RC.rc \
	NemuDD2R0.r0 \
	NemuDDRC.rc \
	NemuDDR0.r0 \
	VMMRC.rc \
	NemuVMMR0.r0

# Do not strip anything of these files
NEMU_FBSD_NO_STRIP = \
	$(if $(NEMU_OSE),,LICENSE) \
	$(if $(NEMU_WITH_MAIN), \
	  components/NemuXPCOMBase.xpt \
	  components/VirtualBox_XPCOM.xpt) \
	nemudrv.tar.gz

# EFI firmware
ifdef NEMU_WITH_EFIFW_PACKING
 NEMU_FBSD_NO_STRIP += \
 	NemuEFI32.fd \
 	NemuEFI64.fd
endif

# Symlinks residing in bin/
NEMU_FBSD_SYMLINKS = \
	$(if $(NEMU_WITH_MAIN), \
		NemuManage \
		NemuSVC) \
	$(if $(NEMU_WITH_NEMUSDL),NemuSDL,) \
	$(if $(NEMU_WITH_DTRACE),NemuDTrace,)

# Qt4 GUI
ifdef NEMU_WITH_QTGUI
 include $(PATH_ROOT)/src/Nemu/Frontends/VirtualBox/nls/ApprovedLanguages.kmk
 NEMU_FBSD_STRIP_BIN += \
 	NemuKeyboard.so \
 	VirtualBox \
 	$(if $(NEMU_WITH_HARDENING),VirtualBox.so) \
	$(if $(NEMU_WITH_DEBUGGER_GUI),NemuDbg.so DbgPlugInDiggers.so,)
 NEMU_FBSD_SYMLINKS += \
 	VirtualBox
 NEMU_FBSD_NO_STRIP += \
	$(NEMU_LICENSE_FILES) \
 	$(if $(NEMU_WITH_QT4_SUN),$(notdir $(wildcard $(PATH_STAGE_BIN)/lib*Nemu*)),) \
	$(if $(NEMU_WITH_QT4_SUN),accessible/libqtaccessiblewidgets.so,) \
 	$(foreach f,$(NEMU_APPROVED_GUI_LANGUAGES),nls/VirtualBox_$(f).qm nls/qt_$(f).qm)
 NEMU_FBSD_DESKTOP_FILE = \
	virtualbox.desktop
 NEMU_FBSD_ICON_FILE = \
	Nemu.png
endif

# Guest Additions
ifdef NEMU_WITH_ADDITIONS_PACKING
 NEMU_FBSD_NO_STRIP += \
 	additions/NemuGuestAdditions.iso
endif

# Documentation
ifdef NEMU_WITH_DOCS_PACKING
 NEMU_FBSD_NO_STRIP += \
	VirtualBox.chm UserManual.pdf \
	$(foreach f,$(NEMU_MANUAL_ADD_LANGUAGES),VirtualBox_$(f).chm UserManual_$(f).pdf)
 NEMU_FBSD_STRIP_BIN += \
	$(if $(NEMU_WITH_KCHMVIEWER),kchmviewer,)
endif

# VRDP
ifdef NEMU_WITH_VRDP
 NEMU_FBSD_STRIP_BIN += \
	NemuVRDP.so \
	NemuAuth.so
 NEMU_FBSD_NO_STRIP += \
	rdesktop-vrdp.tar.gz
 ifdef NEMU_WITH_VRDP_RDESKTOP
#  NEMU_FBSD_NO_STRIP += \
#	rdesktop-vrdp-keymaps
  NEMU_FBSD_STRIP_BIN += \
	rdesktop-vrdp
 endif
endif

# Headless
ifdef NEMU_WITH_HEADLESS
 NEMU_FBSD_STRIP_BIN += \
	NemuHeadless \
	$(if $(NEMU_WITH_HARDENING),NemuHeadless.so)
 NEMU_FBSD_SYMLINKS += \
	NemuHeadless
endif

# Webservices
ifdef NEMU_WITH_WEBSERVICES
 NEMU_FBSD_STRIP_BIN += \
	nemuwebsrv \
	webtest
 NEMU_FBSD_SYMLINKS += \
	nemuwebsrv
endif

# DTrace library, testcase and scripts (as the rest of this file, this makes bold
# ASSUMPTIONS about VBPX_INST_XXX variable values).
ifdef NEMU_WITH_DTRACE
 NEMU_FBSD_NO_STRIP += \
       $(addprefix dtrace/lib/$(KBUILD_TARGET_ARCH)/,$(NEMUINST_DTRACE_LIB_ARCH_FILES)) \
       $(addprefix dtrace/testcase/$(KBUILD_TARGET_ARCH)/,$(NEMUINST_DTRACE_TESTCASE_ARCH_FILES)) \
       $(addprefix dtrace/scripts/,$(NEMUINST_DTRACE_SCRIPTS_FILES))
endif

#
# All the bin files that goes into the archives.
#
NEMU_FBSD_ARCH_FILES := $(NEMU_FBSD_STRIP_BIN) $(NEMU_FBSD_STRIP_OBJ) $(NEMU_FBSD_NO_STRIP)

# Cleanup of the files we copy/symlink from bin.
OTHER_CLEAN += $(addprefix $(NEMU_FBSD_INST_LIBNEMU_DIR)/,$(NEMU_FBSD_ARCH_FILES))

#
# The module source archive
#
$(PATH_STAGE_BIN)/nemudrv.tar.gz: \
		src
	$(call MSG_TOOL, export_modules,,$@)
	$(QUIET)$(PATH_STAGE_BIN)/export_modules $@

#
# The generic installer.
## @todo r=aeichner: Create pkg_plist dynamically based on the available features
#
$(PATH_STAGE_BIN)/$(NEMU_FBSD_PACKAGE_NAME): \
		$(NEMU_VERSION_STAMP) \
		$(NEMU_FBSD_INST_OUT_DIR)/pkg_plist \
		$(addprefix $(NEMU_FBSD_INST_LIBNEMU_DIR)/,$(NEMU_FBSD_ARCH_FILES)) \
		$(addprefix $(NEMU_FBSD_INST_BIN_DIR)/,$(NEMU_FBSD_SYMLINKS)) \
		$(if $(NEMU_OSE),,$(NEMU_BRAND_LICENSE_TXT)) \
		$(if $(NEMU_WITH_QTGUI),$(addprefix $(NEMU_FBSD_INST_SHAREAPP_DIR)/,$(NEMU_FBSD_DESKTOP_FILE)),) \
		$(if $(NEMU_WITH_QTGUI),$(addprefix $(NEMU_FBSD_INST_SHAREICON_DIR)/,$(NEMU_FBSD_ICON_FILE)),) \
		$(NEMU_PATH_FBSD_INST_SRC)/postinstall.sh \
		$(NEMU_PATH_FBSD_INST_SRC)/postdeinstall.sh
	$(call MSG_TOOL,pkg_create,,$@)
	$(QUIET)$(RM) -f $@
	$(QUIET)pkg_create \
		-I $(NEMU_PATH_FBSD_INST_SRC)/postinstall.sh \
		-K $(NEMU_PATH_FBSD_INST_SRC)/postdeinstall.sh \
		-c $(NEMU_PATH_FBSD_INST_SRC)/pkg-comment \
		-d $(NEMU_PATH_FBSD_INST_SRC)/pkg-descr \
		-f $(NEMU_FBSD_INST_OUT_DIR)/pkg_plist \
		-p /usr/local \
		-s $(NEMU_FBSD_INST_STAGE_DIR) \
		$@
	$(QUIET)$(RM) -Rf $(NEMU_FBSD_INST_STAGE_DIR)

$(addprefix $(NEMU_FBSD_INST_LIBNEMU_DIR)/,$(NEMU_FBSD_STRIP_BIN)): \
		$(NEMU_FBSD_INST_LIBNEMU_DIR)/% : $(PATH_STAGE_BIN)/%
	$(call MSG_INST_FILE,$<,$@)
	$(QUIET)$(INSTALL) -d $(dir $@)
	$(QUIET)$(INSTALL) -m 0755 $(if $(NEMU_DO_STRIP),-s,) $< $@

# pattern rule for striping and copying the NEMU_FBSD_STRIP_OBJ files to install/lib/virtualbox
$(addprefix $(NEMU_FBSD_INST_LIBNEMU_DIR)/,$(NEMU_FBSD_STRIP_OBJ)): \
		$(NEMU_FBSD_INST_LIBNEMU_DIR)/% : $(PATH_STAGE_BIN)/%
	$(call MSG_INST_FILE,$<,$@)
	$(QUIET)$(INSTALL) -d $(dir $@)
ifeq ($(NEMU_DO_STRIP),)
	$(QUIET)$(INSTALL) -m 0644 $< $@
else # strip to temp file because of umask.
	$(QUIET)objcopy --strip-unneeded -R .comment $< $@.tmp
	$(QUIET)$(INSTALL) -m 0644 $@.tmp $@
	$(QUIET)$(RM) -f -- $@.tmp
endif

# pattern rule for linking the NEMU_FBSD_NO_STRIP into lib/virtualbox/
$(addprefix $(NEMU_FBSD_INST_LIBNEMU_DIR)/,$(NEMU_FBSD_NO_STRIP)): \
		$(NEMU_FBSD_INST_LIBNEMU_DIR)/% : $(PATH_STAGE_BIN)/%
	$(call MSG_INST_FILE,$<,$@)
	$(QUIET)$(INSTALL) -d $(dir $@)
	$(QUIET)$(RM) -f $@
	$(QUIET)$(INSTALL) -m 0644 $< $@

# pattern rule for symlinking the NEMU_FBSD_SYMLINKS into bin/
$(addprefix $(NEMU_FBSD_INST_BIN_DIR)/,$(NEMU_FBSD_SYMLINKS)): \
		$(NEMU_FBSD_INST_BIN_DIR)/% : $(PATH_STAGE_BIN)/%
	$(call MSG_INST_SYM,$<,$@)
	$(QUIET)$(INSTALL) -d $(dir $@)
	$(QUIET)$(RM) -f $@
	$(QUIET)$(LN_SYMLINK) ../lib/virtualbox/$(notdir $@) $@

# pattern rule for copying the NEMU_FBSD_DESKTOP_FILE into share/applications/
$(addprefix $(NEMU_FBSD_INST_SHAREAPP_DIR)/,$(NEMU_FBSD_DESKTOP_FILE)): \
		$(NEMU_FBSD_INST_SHAREAPP_DIR)/% : $(PATH_STAGE_BIN)/%
	$(call MSG_INST_FILE,$<,$@)
	$(QUIET)$(INSTALL) -d $(dir $@)
	$(QUIET)$(RM) -f $@
	$(QUIET)$(INSTALL) -m 0644 $< $@

# pattern rule for copying the NEMU_FBSD_ICON_FILE into share/pixmaps/
$(addprefix $(NEMU_FBSD_INST_SHAREICON_DIR)/,$(NEMU_FBSD_ICON_FILE)): \
		$(NEMU_FBSD_INST_SHAREICON_DIR)/% : $(PATH_STAGE_BIN)/%
	$(call MSG_INST_FILE,$<,$@)
	$(QUIET)$(INSTALL) -d $(dir $@)
	$(QUIET)$(RM) -f $@
	$(QUIET)$(INSTALL) -m 0644 $< $@

# Create pkg_plist
$(NEMU_FBSD_INST_OUT_DIR)/pkg_plist: \
		$(NEMU_PATH_FBSD_INST_SRC)/pkg_plist
	$(call MSG_INST_FILE,$<,$@)
	$(QUIET)$(INSTALL) -d $(dir $@)
	$(QUIET)$(SED) \
		-e "s;_NEMU_REM_32BIT_MODULE_;$(if $(eq $(KBUILD_TARGET_ARCH),x86),NemuREM32.so,);g" \
		-e "s;_NEMU_REM_64BIT_MODULE_;$(if $(eq $(KBUILD_TARGET_ARCH),x86),NemuREM64.so,);g" \
		--output $@ \
		$<
ifdef NEMU_WITH_DTRACE
	$(QUIET)$(APPEND) -n "$@" "@mode 644" \
		$(addprefix lib/virtualbox/dtrace/lib/$(KBUILD_TARGET_ARCH)/,$(NEMUINST_DTRACE_LIB_ARCH_FILES)) \
		$(addprefix lib/virtualbox/dtrace/testcase/$(KBUILD_TARGET_ARCH)/,$(NEMUINST_DTRACE_TESTCASE_ARCH_FILES)) \
		$(addprefix lib/virtualbox/dtrace/scripts/,$(NEMUINST_DTRACE_SCRIPTS_FILES)) \
		"@mode 755" \
		"bin/NemuDTrace"
endif

include $(FILE_KBUILD_SUB_FOOTER)

