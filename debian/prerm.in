#!/bin/sh

#
# Copyright (C) 2006-2012 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

# we can be called with the following arguments (6.5 of Debian policy):
#  upgrade:          (new version): upgrade to a new version
#  failed-upgrade:   (our version): failed to upgrade
#  remove:           (our version): remove this package
#  purge:            (our version): purge this package
#  deconfigure:      (our version): removing conflicting version

rm -f /etc/udev/rules.d/60-nemudrv.rules
rm -f /etc/nemu/license_agreed
rm -f /etc/nemu/module_not_compiled

# defaults
[ -r /etc/default/virtualbox ] && . /etc/default/virtualbox

if [ "$1" = "upgrade" -o "$1" = "remove" -o "$1" = "failed-upgrade" ]; then
  . /usr/share/debconf/confmodule
  db_version 2.0
  db_capb backup

  # check for active VMs
  NEMUSVC_PID=`pidof NemuSVC 2>/dev/null`
  if [ -n "$NEMUSVC_PID" ]; then
    # try graceful termination; terminate the balloon control servic first
    if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
      invoke-rc.d nemuballoonctrl-service stop || true
    else
      /etc/init.d/nemuballoonctrl-service stop || true
    fi
    # try graceful termination; terminate the webservice first
    if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
      invoke-rc.d nemuweb-service stop || true
    else
      /etc/init.d/nemuweb-service stop || true
    fi
    kill -USR1 $NEMUSVC_PID
    sleep 1
    if pidof NemuSVC > /dev/null 2>&1; then
      if [ "$1" != "failed-upgrade" ]; then
        db_fset virtualbox/old-running seen false || true
        db_input critical virtualbox/old-running || true
        db_go || true
      fi
      exit 1
    fi
  fi
fi

# make sure we de-register the DMKS modules before the files get removed
if [ "$1" = "upgrade" -o "$1" = "remove" -o "$1" = "deconfigure" ]; then
  DKMS=`which dkms 2>/dev/null`
  if [ -n "$DKMS" ]; then
    $DKMS remove -m nemuhost -v %VER% --all > /dev/null 2>&1 || true
  fi
fi

# stop nemunet/nemudrv manually as we use our own error handling in postrm
if [ -x "/etc/init.d/nemudrv" ]; then
  if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
    invoke-rc.d nemudrv stop || exit $?
  else
    /etc/init.d/nemudrv stop || exit $?
  fi
fi
if [ -x "/etc/init.d/nemunet" ]; then
  if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
    invoke-rc.d nemunet stop || exit $?
  else
    /etc/init.d/nemunet stop || exit $?
  fi
fi

#DEBHELPER#

exit 0
