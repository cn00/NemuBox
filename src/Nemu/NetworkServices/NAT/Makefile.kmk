# $Id: Makefile.kmk $
## @file
#

#
# Copyright (C) 2006-2015 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

SUB_DEPTH = ../../../..
include $(KBUILD_PATH)/subheader.kmk

NEMU_PATH_NAT_SRC := $(PATH_SUB_CURRENT)

ifdef NEMU_WITH_LWIP_NAT
# XXX: do not depend on order
ifndef LWIP_SOURCES
  include $(PATH_SUB_CURRENT)/../../Devices/Network/lwip-new/Makefile.kmk
endif

ifdef NEMU_WITH_HARDENING
 PROGRAMS += NemuNetLwipNATHardened
 DLLS += NemuNetLwipNAT
else
 PROGRAMS += NemuNetLwipNAT
endif

ifdef NEMU_WITH_HARDENING
 NemuNetLwipNATHardened_SOURCES += NemuNetNATHardened.cpp
 NemuNetLwipNATHardened_SOURCES.win = $(NemuNetLwipNAT_0_OUTDIR)/NemuNetLwipNAT-icon.rc
 NemuNetLwipNATHardened_DEFS += SERVICE_NAME=\"NemuNetNAT\"
 NemuNetLwipNATHardened_TEMPLATE=NEMUR3HARDENEDEXE
 NemuNetLwipNATHardened_NAME = NemuNetNAT
 NemuNetLwipNATHardened_LDFLAGS.win = /SUBSYSTEM:windows
endif

NemuNetLwipNAT_TEMPLATE =
NemuNetLwipNAT_TEMPLATE := NEMUMAIN$(if-expr defined(NEMU_WITH_HARDENING),DLL,CLIENTEXE)
NemuNetLwipNAT_NAME = NemuNetNAT
NemuNetLwipNAT_DEFS += ${LWIP_DEFS} IPv6
# NemuNetLwipNAT_DEFS.linux += WITH_VALGRIND # instrument lwip memp.c
NemuNetLwipNAT_DEFS.win += NEMU_COM_OUTOFPROC_MODULE _WIN32_WINNT=0x501 # Windows XP
NemuNetLwipNAT_SOURCES += NemuNetLwipNAT.cpp	\
	$(NEMU_PATH_NAT_SRC)/../NetLib/NemuNetBaseService.cpp \
	$(NEMU_PATH_NAT_SRC)/../NetLib/NemuNetPortForwardString.cpp \
	$(NEMU_PATH_NAT_SRC)/../NetLib/NemuNetIntIf.cpp \
	$(NEMU_PATH_NAT_SRC)/../NetLib/NemuNetUDP.cpp \
	$(NEMU_PATH_NAT_SRC)/../NetLib/NemuNetARP.cpp \
	$(NEMU_PATH_NAT_SRC)/../NetLib/ComHostUtils.cpp

NemuNetLwipNAT_LIBS = \
	$(LIB_RUNTIME)
NemuNetLwipNAT_LIBS.solaris += socket nsl
NemuNetLwipNAT_LDFLAGS.win = /SUBSYSTEM:windows

# Convince Solaris headers to expose socket stuff we need.
#
# Setting _XOPEN_SOURCE to either 500 or 600 would always work, but
# <sys/feature_tests.h> insists that 600 requires C99 and so it
# explodes for older g++.  It also insists that 500 is NOT to be used
# with C99.
#
# Newer g++ in C++11 mode (formerly known as C++0x) needs 600, so it
# employs sleight of hand to pretend it's C99 to keep feature test
# happy.
#
# Compile the C code with settings that match g++.  This probably
# should be centralized so that whole codebase uses consistent
# settings.
ifeq ($(KBUILD_TARGET),solaris)
 ifneq ($(NEMU_GCC_VERSION_CXX),)
  ifneq ($(int-ge $(NEMU_GCC_VERSION_CXX),40600),)
   # we compile C++ code with -std=c++0x / -std=c++11
   NemuNetLwipNAT_CFLAGS.solaris += -std=c99
   NemuNetLwipNAT_DEFS.solaris += _XOPEN_SOURCE=600
  else
   NemuNetLwipNAT_DEFS.solaris += _XOPEN_SOURCE=500
  endif
 endif
 NemuNetLwipNAT_DEFS.solaris += __EXTENSIONS__=1
endif

NemuNetLwipNAT_SOURCES += \
    proxy_pollmgr.c \
    proxy_rtadvd.c \
    proxy.c \
    pxremap.c \
    pxtcp.c \
    pxudp.c \
    pxdns.c \
    fwtcp.c \
    fwudp.c \
    portfwd.c \
    proxy_dhcp6ds.c \
    proxy_tftpd.c

ifeq ($(KBUILD_TARGET),win)
 # unprivileged Icmp API
 NemuNetLwipNAT_SOURCES += pxping_win.c
else
 # raw sockets
 NemuNetLwipNAT_SOURCES += pxping.c
endif

# ifeq ($(NEMU_WITH_HARDENING),)
#  ifn1of ($(KBUILD_TARGET), darwin win)
#   # helper for debugging unprivileged
#   NemuNetLwipNAT_DEFS += NEMU_RAWSOCK_DEBUG_HELPER
#   NemuNetLwipNAT_SOURCES += getrawsock.c
#  endif
# endif

NemuNetLwipNAT_SOURCES.darwin  += rtmon_bsd.c
NemuNetLwipNAT_SOURCES.freebsd += rtmon_bsd.c
NemuNetLwipNAT_SOURCES.linux   += rtmon_linux.c
NemuNetLwipNAT_SOURCES.solaris += rtmon_bsd.c
NemuNetLwipNAT_SOURCES.win     += rtmon_win.c

NemuNetLwipNAT_SOURCES.win += \
    RTWinPoll.cpp \
    RTWinSocketPair.cpp

NemuNetLwipNAT_INCS += . # for lwipopts.h
$(eval $(call def_nemu_lwip_public, \
    NemuNetLwipNAT, $(PATH_SUB_CURRENT)/../../Devices/Network/lwip-new))
endif

ifeq ($(KBUILD_TARGET),win)
# Icon include file.
NemuNetLwipNAT_SOURCES  += NemuNetNAT.rc
NemuNetNAT.rc_INCS       = $(NemuNetLwipNAT_0_OUTDIR)
NemuNetNAT.rc_DEPS       = $(NemuNetLwipNAT_0_OUTDIR)/NemuNetLwipNAT-icon.rc
NemuNetNAT.rc_CLEAN      = $(NemuNetLwipNAT_0_OUTDIR)/NemuNetLwipNAT-icon.rc
$$(NemuNetLwipNAT_0_OUTDIR)/NemuNetLwipNAT-icon.rc: $(NEMU_WINDOWS_ICON_FILE) $$(NemuNetLwipNAT_DEFPATH)/Makefile.kmk | $$(dir $$@)
	$(RM) -f $@
	$(APPEND) $@ 'IDI_VIRTUALBOX ICON DISCARDABLE "$(subst /,\\,$(NEMU_WINDOWS_ICON_FILE))"'
endif # win

include $(FILE_KBUILD_SUB_FOOTER)
